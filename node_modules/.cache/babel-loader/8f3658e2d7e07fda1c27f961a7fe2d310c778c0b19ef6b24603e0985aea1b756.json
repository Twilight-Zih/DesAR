{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZIHAB\\\\OneDrive\\\\Desktop\\\\Final Year Mesh&Zih\\\\DesAR\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const reticleRef = useRef(null);\n  const controllerRef = useRef(null);\n  const [selectedObject, setSelectedObject] = useState(null);\n  const [placedObjects, setPlacedObjects] = useState([]);\n  const itemsRef = useRef([]);\n  const rotateIntervalRef = useRef(null);\n  const raycaster = useRef(new THREE.Raycaster());\n  useEffect(() => {\n    init();\n    setupFurnitureSelection();\n    return () => {\n      if (rendererRef.current) {\n        rendererRef.current.setAnimationLoop(null);\n      }\n    };\n  }, []);\n  function init() {\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 20);\n    cameraRef.current = camera;\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.xr.enabled = true;\n    document.body.appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n\n    // Add AR button\n    document.body.appendChild(ARButton.createButton(renderer));\n\n    // Reticle setup\n    const reticle = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial({\n      color: 0x0fff0,\n      transparent: true,\n      opacity: 0.5\n    }));\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n    reticleRef.current = reticle;\n\n    // Light\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    scene.add(light);\n\n    // Setup controller\n    const controller = renderer.xr.getController(0);\n    controller.addEventListener(\"selectstart\", onSelect);\n    scene.add(controller);\n    controllerRef.current = controller;\n    loadModels();\n    renderer.setAnimationLoop(() => {\n      renderer.render(scene, camera);\n    });\n\n    // Add \"Place\" button event listener\n    const placeButton = document.querySelector(\".place-button\");\n    placeButton.addEventListener(\"click\", onSelect);\n  }\n  function loadModels() {\n    const loader = new GLTFLoader();\n    const models = ['path/to/model1.glb', 'path/to/model2.glb'];\n    models.forEach((modelPath, index) => {\n      loader.load(modelPath, gltf => {\n        itemsRef.current[index] = gltf.scene;\n        console.log(`Loaded model ${index}:`, gltf.scene); // Debugging log\n      });\n    });\n  }\n\n  function setupFurnitureSelection() {\n    const buttons = document.querySelectorAll(\".button-image\");\n    buttons.forEach((button, index) => {\n      button.addEventListener(\"click\", () => {\n        setSelectedObject(index);\n        console.log(\"Selected object:\", index); // Debugging log\n        buttons.forEach(btn => btn.classList.remove(\"selected\"));\n        button.classList.add(\"selected\");\n      });\n    });\n  }\n  function onSelect() {\n    console.log(\"Reticle visible:\", reticleRef.current.visible); // Debugging log\n    if (reticleRef.current.visible && selectedObject !== null) {\n      const model = itemsRef.current[selectedObject].clone();\n      model.position.copy(reticleRef.current.position);\n      model.rotation.copy(reticleRef.current.rotation);\n\n      // Ensure placement on floor (Y=0)\n      model.position.y = 0;\n\n      // Check for overlap\n      if (detectOverlap(model)) {\n        showTemporaryWarning();\n        return;\n      }\n\n      // Add to scene and state\n      sceneRef.current.add(model);\n      setPlacedObjects(prev => [...prev, model]);\n\n      // Add event listeners for interaction\n      model.userData = {\n        doubleTap: false\n      };\n      console.log(\"Object placed at:\", model.position); // Debugging log\n    } else {\n      console.log(\"Object not placed. Either no object selected or no valid surface.\");\n    }\n  }\n  function detectOverlap(newModel) {\n    const bboxNew = new THREE.Box3().setFromObject(newModel);\n    for (const obj of placedObjects) {\n      const bboxExisting = new THREE.Box3().setFromObject(obj);\n      if (bboxNew.intersectsBox(bboxExisting)) {\n        console.log(\"Overlap detected\"); // Debugging log\n        return true;\n      }\n    }\n    return false;\n  }\n  function showTemporaryWarning() {\n    alert(\"Objects cannot overlap!\");\n    console.log(\"Overlap warning displayed\"); // Debugging log\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"place-button\",\n        children: \"Place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"button-image\",\n          src: \"path/to/image1.png\",\n          alt: \"Furniture 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"button-image\",\n          src: \"path/to/image2.png\",\n          alt: \"Furniture 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Trn9yMjWOq0rL6pj41h0MNmdb6o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ARButton","THREE","GLTFLoader","jsxDEV","_jsxDEV","App","_s","sceneRef","cameraRef","rendererRef","reticleRef","controllerRef","selectedObject","setSelectedObject","placedObjects","setPlacedObjects","itemsRef","rotateIntervalRef","raycaster","Raycaster","init","setupFurnitureSelection","current","setAnimationLoop","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","alpha","setSize","xr","enabled","document","body","appendChild","domElement","createButton","reticle","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","color","transparent","opacity","matrixAutoUpdate","visible","add","light","HemisphereLight","controller","getController","addEventListener","onSelect","loadModels","render","placeButton","querySelector","loader","models","forEach","modelPath","index","load","gltf","console","log","buttons","querySelectorAll","button","btn","classList","remove","model","clone","position","copy","rotation","y","detectOverlap","showTemporaryWarning","prev","userData","doubleTap","newModel","bboxNew","Box3","setFromObject","obj","bboxExisting","intersectsBox","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/ZIHAB/OneDrive/Desktop/Final Year Mesh&Zih/DesAR/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport './App.css';\n\nfunction App() {\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const reticleRef = useRef(null);\n  const controllerRef = useRef(null);\n  const [selectedObject, setSelectedObject] = useState(null);\n  const [placedObjects, setPlacedObjects] = useState([]);\n  const itemsRef = useRef([]);\n  const rotateIntervalRef = useRef(null);\n  const raycaster = useRef(new THREE.Raycaster());\n  \n  useEffect(() => {\n    init();\n    setupFurnitureSelection();\n\n    return () => {\n      if (rendererRef.current) {\n        rendererRef.current.setAnimationLoop(null);\n      }\n    };\n  }, []);\n\n  function init() {\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 20);\n    cameraRef.current = camera;\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.xr.enabled = true;\n    document.body.appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n\n    // Add AR button\n    document.body.appendChild(ARButton.createButton(renderer));\n\n    // Reticle setup\n    const reticle = new THREE.Mesh(\n      new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2),\n      new THREE.MeshBasicMaterial({ color: 0x0fff0, transparent: true, opacity: 0.5 })\n    );\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n    reticleRef.current = reticle;\n\n    // Light\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    scene.add(light);\n\n    // Setup controller\n    const controller = renderer.xr.getController(0);\n    controller.addEventListener(\"selectstart\", onSelect);\n    scene.add(controller);\n    controllerRef.current = controller;\n\n    loadModels();\n\n    renderer.setAnimationLoop(() => {\n      renderer.render(scene, camera);\n    });\n\n    // Add \"Place\" button event listener\n    const placeButton = document.querySelector(\".place-button\");\n    placeButton.addEventListener(\"click\", onSelect);\n  }\n\n  function loadModels() {\n    const loader = new GLTFLoader();\n    const models = ['path/to/model1.glb', 'path/to/model2.glb'];\n\n    models.forEach((modelPath, index) => {\n      loader.load(modelPath, (gltf) => {\n        itemsRef.current[index] = gltf.scene;\n        console.log(`Loaded model ${index}:`, gltf.scene); // Debugging log\n      });\n    });\n  }\n\n  function setupFurnitureSelection() {\n    const buttons = document.querySelectorAll(\".button-image\");\n    buttons.forEach((button, index) => {\n      button.addEventListener(\"click\", () => {\n        setSelectedObject(index);\n        console.log(\"Selected object:\", index); // Debugging log\n        buttons.forEach((btn) => btn.classList.remove(\"selected\"));\n        button.classList.add(\"selected\");\n      });\n    });\n  }\n\n  function onSelect() {\n    console.log(\"Reticle visible:\", reticleRef.current.visible); // Debugging log\n    if (reticleRef.current.visible && selectedObject !== null) {\n      const model = itemsRef.current[selectedObject].clone();\n      model.position.copy(reticleRef.current.position);\n      model.rotation.copy(reticleRef.current.rotation);\n\n      // Ensure placement on floor (Y=0)\n      model.position.y = 0;\n\n      // Check for overlap\n      if (detectOverlap(model)) {\n        showTemporaryWarning();\n        return;\n      }\n\n      // Add to scene and state\n      sceneRef.current.add(model);\n      setPlacedObjects((prev) => [...prev, model]);\n\n      // Add event listeners for interaction\n      model.userData = { doubleTap: false };\n\n      console.log(\"Object placed at:\", model.position); // Debugging log\n    } else {\n      console.log(\"Object not placed. Either no object selected or no valid surface.\");\n    }\n  }\n\n  function detectOverlap(newModel) {\n    const bboxNew = new THREE.Box3().setFromObject(newModel);\n\n    for (const obj of placedObjects) {\n      const bboxExisting = new THREE.Box3().setFromObject(obj);\n      if (bboxNew.intersectsBox(bboxExisting)) {\n        console.log(\"Overlap detected\"); // Debugging log\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function showTemporaryWarning() {\n    alert(\"Objects cannot overlap!\");\n    console.log(\"Overlap warning displayed\"); // Debugging log\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"ui-container\">\n        <button className=\"place-button\">Place</button>\n        <div className=\"navbar\">\n          <img className=\"button-image\" src=\"path/to/image1.png\" alt=\"Furniture 1\" />\n          <img className=\"button-image\" src=\"path/to/image2.png\" alt=\"Furniture 2\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}