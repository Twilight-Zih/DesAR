{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZIHAB\\\\OneDrive\\\\Desktop\\\\Final Year Mesh&Zih\\\\DesAR\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n  let scene, camera, renderer, raycaster, mouse;\n  let models = [\"./dylan_armchair_yolk_yellow.glb\", \"./ivan_armchair_mineral_blue.glb\", \"./marble_coffee_table.glb\", \"./flippa_functional_coffee_table_w._storagewalnut.glb\", \"./frame_armchairpetrol_velvet_with_gold_frame.glb\", \"./elnaz_nesting_side_tables_brass__green_marble.glb\"];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01];\n  let items = [];\n  let itemSelectedIndex = 0;\n  let controller;\n  let selectedObject = null;\n  let placedObjects = [];\n  const MIN_DISTANCE_BETWEEN_OBJECTS = 1;\n  init();\n  setupFurnitureSelection();\n  setupRotationControls();\n  setupRemoveControls();\n  animate();\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 20);\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.xr.enabled = true;\n\n    // Raycaster and mouse setup\n    raycaster = new THREE.Raycaster();\n    mouse = new THREE.Vector2();\n\n    // Adjust on window resize\n    window.addEventListener(\"resize\", onWindowResize);\n\n    // AR Button\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: {\n        root: document.body\n      }\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    // Load Models\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        items[i] = model;\n      });\n    }\n    controller = renderer.xr.getController(0);\n    scene.add(controller);\n\n    // Reticle\n    reticle = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial());\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    // Add Place Button\n    const placeButton = document.createElement(\"button\");\n    placeButton.innerText = \"Place\";\n    placeButton.className = \"place-button\";\n    placeButton.style.position = \"absolute\";\n    placeButton.style.bottom = \"230px\";\n    placeButton.style.left = \"50%\";\n    placeButton.style.transform = \"translateX(-50%)\";\n    placeButton.addEventListener(\"click\", onPlaceButtonClicked);\n    document.body.appendChild(placeButton);\n\n    // Add touch event listener for object selection\n    window.addEventListener(\"touchstart\", onTouch, false);\n  }\n  function onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n  function onPlaceButtonClicked() {\n    if (reticle.visible) {\n      const newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n\n      // Decompose reticle's position and apply to new model\n      reticle.matrix.decompose(newModel.position, newModel.quaternion, newModel.scale);\n      if (canPlaceObject(newModel.position)) {\n        let scaleFactor = modelScaleFactor[itemSelectedIndex];\n        newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n        scene.add(newModel);\n        newModel.userData.selectable = true;\n        newModel.userData.id = placedObjects.length;\n        placedObjects.push(newModel);\n        selectObject(newModel); // Automatically select the newly placed object\n      } else {\n        console.log(\"Object is too close to another object.\");\n      }\n    }\n  }\n  function canPlaceObject(position) {\n    for (let i = 0; i < placedObjects.length; i++) {\n      const distance = placedObjects[i].position.distanceTo(position);\n      if (distance < MIN_DISTANCE_BETWEEN_OBJECTS) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Touch event handler for object selection\n  function onTouch(event) {\n    // Handle multi-touch (e.g. zoom, pan)\n    if (event.touches.length === 1) {\n      event.preventDefault();\n\n      // Calculate normalized device coordinates (NDC) for the touch position\n      mouse.x = event.touches[0].clientX / window.innerWidth * 2 - 1;\n      mouse.y = -(event.touches[0].clientY / window.innerHeight) * 2 + 1;\n\n      // Update the raycaster with the camera and mouse position\n      raycaster.setFromCamera(mouse, camera);\n\n      // Get the list of objects intersected by the ray\n      const intersects = raycaster.intersectObjects(placedObjects);\n      if (intersects.length > 0) {\n        // Select the first intersected object\n        const intersectedObject = intersects[0].object;\n        selectObject(intersectedObject);\n      }\n    }\n  }\n\n  // Select an object for rotation/removal\n  function selectObject(object) {\n    selectedObject = object;\n    console.log(\"Selected object:\", selectedObject);\n  }\n\n  // Set up the furniture selection\n  const onClicked = (e, selectItem, index) => {\n    itemSelectedIndex = index;\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.classList.remove(\"clicked\");\n    }\n    e.target.classList.add(\"clicked\");\n  };\n  function setupFurnitureSelection() {\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.addEventListener(\"beforexrselect\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClicked(e, items[i], i);\n      });\n    }\n  }\n\n  // Add rotation controls\n  function setupRotationControls() {\n    const rotateLeftButton = document.createElement(\"button\");\n    rotateLeftButton.innerText = \"Rotate Left\";\n    rotateLeftButton.className = \"rotate-left-button\";\n    rotateLeftButton.style.position = \"absolute\";\n    rotateLeftButton.style.bottom = \"280px\";\n    rotateLeftButton.style.left = \"20px\";\n    rotateLeftButton.addEventListener(\"click\", () => rotateObject(-Math.PI / 8));\n    document.body.appendChild(rotateLeftButton);\n    const rotateRightButton = document.createElement(\"button\");\n    rotateRightButton.innerText = \"Rotate Right\";\n    rotateRightButton.className = \"rotate-right-button\";\n    rotateRightButton.style.position = \"absolute\";\n    rotateRightButton.style.bottom = \"280px\";\n    rotateRightButton.style.right = \"20px\";\n    rotateRightButton.addEventListener(\"click\", () => rotateObject(Math.PI / 8));\n    document.body.appendChild(rotateRightButton);\n  }\n\n  // Rotate the selected object\n  function rotateObject(angle) {\n    if (selectedObject) {\n      selectedObject.rotation.y += angle;\n    }\n  }\n\n  // Add remove controls\n  function setupRemoveControls() {\n    const removeButton = document.createElement(\"button\");\n    removeButton.innerText = \"Remove\";\n    removeButton.className = \"remove-button\";\n    removeButton.style.position = \"absolute\";\n    removeButton.style.bottom = \"330px\";\n    removeButton.style.left = \"50%\";\n    removeButton.style.transform = \"translateX(-50%)\";\n    removeButton.addEventListener(\"click\", removeObject);\n    document.body.appendChild(removeButton);\n  }\n\n  // Remove the selected object\n  function removeObject() {\n    if (selectedObject) {\n      scene.remove(selectedObject);\n      const index = placedObjects.indexOf(selectedObject);\n      if (index > -1) {\n        placedObjects.splice(index, 1);\n      }\n      selectedObject = null;\n    }\n  }\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session.requestHitTestSource({\n            space: referenceSpace\n          }).then(function (source) {\n            hitTestSource = source;\n          });\n        });\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n        hitTestSourceRequested = true;\n      }\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          const matrix = hit.getPose(referenceSpace).transform.matrix;\n          const normal = new THREE.Vector3(matrix[4], matrix[5], matrix[6]);\n          const angleFromUp = normal.angleTo(new THREE.Vector3(0, 1, 0));\n          const verticalThreshold = THREE.MathUtils.degToRad(20);\n          if (angleFromUp < verticalThreshold) {\n            reticle.visible = true;\n            reticle.matrix.fromArray(matrix);\n          } else {\n            reticle.visible = false;\n          }\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n    renderer.render(scene, camera);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["THREE","ARButton","GLTFLoader","jsxDEV","_jsxDEV","App","reticle","hitTestSource","hitTestSourceRequested","scene","camera","renderer","raycaster","mouse","models","modelScaleFactor","items","itemSelectedIndex","controller","selectedObject","placedObjects","MIN_DISTANCE_BETWEEN_OBJECTS","init","setupFurnitureSelection","setupRotationControls","setupRemoveControls","animate","myCanvas","document","getElementById","Scene","PerspectiveCamera","window","innerWidth","innerHeight","light","HemisphereLight","position","set","add","WebGLRenderer","canvas","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","xr","enabled","Raycaster","Vector2","addEventListener","onWindowResize","arButton","createButton","requiredFeatures","optionalFeatures","domOverlay","root","body","style","bottom","appendChild","i","length","loader","load","glb","model","getController","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","matrixAutoUpdate","visible","placeButton","createElement","innerText","className","left","transform","onPlaceButtonClicked","onTouch","aspect","updateProjectionMatrix","newModel","clone","matrix","decompose","quaternion","scale","canPlaceObject","scaleFactor","userData","selectable","id","push","selectObject","console","log","distance","distanceTo","event","touches","preventDefault","x","clientX","y","clientY","setFromCamera","intersects","intersectObjects","intersectedObject","object","onClicked","e","selectItem","index","el","querySelector","classList","remove","target","stopPropagation","rotateLeftButton","rotateObject","rotateRightButton","right","angle","rotation","removeButton","removeObject","indexOf","splice","setAnimationLoop","render","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","hitTestResults","getHitTestResults","hit","getPose","normal","Vector3","angleFromUp","angleTo","verticalThreshold","MathUtils","degToRad","fromArray","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ZIHAB/OneDrive/Desktop/Final Year Mesh&Zih/DesAR/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n\n  let scene, camera, renderer, raycaster, mouse;\n\n  let models = [\n    \"./dylan_armchair_yolk_yellow.glb\",\n    \"./ivan_armchair_mineral_blue.glb\",\n    \"./marble_coffee_table.glb\",\n    \"./flippa_functional_coffee_table_w._storagewalnut.glb\",\n    \"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\n    \"./elnaz_nesting_side_tables_brass__green_marble.glb\",\n  ];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01];\n  let items = [];\n  let itemSelectedIndex = 0;\n\n  let controller;\n  let selectedObject = null;\n\n  let placedObjects = [];\n  const MIN_DISTANCE_BETWEEN_OBJECTS = 1;\n\n  init();\n  setupFurnitureSelection();\n  setupRotationControls();\n  setupRemoveControls();\n  animate();\n\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 20);\n\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.xr.enabled = true;\n\n    // Raycaster and mouse setup\n    raycaster = new THREE.Raycaster();\n    mouse = new THREE.Vector2();\n\n    // Adjust on window resize\n    window.addEventListener(\"resize\", onWindowResize);\n\n    // AR Button\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: { root: document.body },\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    // Load Models\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        items[i] = model;\n      });\n    }\n\n    controller = renderer.xr.getController(0);\n    scene.add(controller);\n\n    // Reticle\n    reticle = new THREE.Mesh(\n      new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2),\n      new THREE.MeshBasicMaterial()\n    );\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    // Add Place Button\n    const placeButton = document.createElement(\"button\");\n    placeButton.innerText = \"Place\";\n    placeButton.className = \"place-button\";\n    placeButton.style.position = \"absolute\";\n    placeButton.style.bottom = \"230px\";\n    placeButton.style.left = \"50%\";\n    placeButton.style.transform = \"translateX(-50%)\";\n    placeButton.addEventListener(\"click\", onPlaceButtonClicked);\n    document.body.appendChild(placeButton);\n\n    // Add touch event listener for object selection\n    window.addEventListener(\"touchstart\", onTouch, false);\n  }\n\n  function onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n\n  function onPlaceButtonClicked() {\n    if (reticle.visible) {\n      const newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n\n      // Decompose reticle's position and apply to new model\n      reticle.matrix.decompose(\n        newModel.position,\n        newModel.quaternion,\n        newModel.scale\n      );\n\n      if (canPlaceObject(newModel.position)) {\n        let scaleFactor = modelScaleFactor[itemSelectedIndex];\n        newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n\n        scene.add(newModel);\n\n        newModel.userData.selectable = true;\n        newModel.userData.id = placedObjects.length;\n\n        placedObjects.push(newModel);\n\n        selectObject(newModel); // Automatically select the newly placed object\n      } else {\n        console.log(\"Object is too close to another object.\");\n      }\n    }\n  }\n\n  function canPlaceObject(position) {\n    for (let i = 0; i < placedObjects.length; i++) {\n      const distance = placedObjects[i].position.distanceTo(position);\n      if (distance < MIN_DISTANCE_BETWEEN_OBJECTS) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Touch event handler for object selection\n  function onTouch(event) {\n    // Handle multi-touch (e.g. zoom, pan)\n    if (event.touches.length === 1) {\n      event.preventDefault();\n\n      // Calculate normalized device coordinates (NDC) for the touch position\n      mouse.x = (event.touches[0].clientX / window.innerWidth) * 2 - 1;\n      mouse.y = -(event.touches[0].clientY / window.innerHeight) * 2 + 1;\n\n      // Update the raycaster with the camera and mouse position\n      raycaster.setFromCamera(mouse, camera);\n\n      // Get the list of objects intersected by the ray\n      const intersects = raycaster.intersectObjects(placedObjects);\n\n      if (intersects.length > 0) {\n        // Select the first intersected object\n        const intersectedObject = intersects[0].object;\n        selectObject(intersectedObject);\n      }\n    }\n  }\n\n  // Select an object for rotation/removal\n  function selectObject(object) {\n    selectedObject = object;\n    console.log(\"Selected object:\", selectedObject);\n  }\n\n  // Set up the furniture selection\n  const onClicked = (e, selectItem, index) => {\n    itemSelectedIndex = index;\n\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.classList.remove(\"clicked\");\n    }\n\n    e.target.classList.add(\"clicked\");\n  };\n\n  function setupFurnitureSelection() {\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.addEventListener(\"beforexrselect\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClicked(e, items[i], i);\n      });\n    }\n  }\n\n  // Add rotation controls\n  function setupRotationControls() {\n    const rotateLeftButton = document.createElement(\"button\");\n    rotateLeftButton.innerText = \"Rotate Left\";\n    rotateLeftButton.className = \"rotate-left-button\";\n    rotateLeftButton.style.position = \"absolute\";\n    rotateLeftButton.style.bottom = \"280px\";\n    rotateLeftButton.style.left = \"20px\";\n    rotateLeftButton.addEventListener(\"click\", () => rotateObject(-Math.PI / 8));\n    document.body.appendChild(rotateLeftButton);\n\n    const rotateRightButton = document.createElement(\"button\");\n    rotateRightButton.innerText = \"Rotate Right\";\n    rotateRightButton.className = \"rotate-right-button\";\n    rotateRightButton.style.position = \"absolute\";\n    rotateRightButton.style.bottom = \"280px\";\n    rotateRightButton.style.right = \"20px\";\n    rotateRightButton.addEventListener(\"click\", () => rotateObject(Math.PI / 8));\n    document.body.appendChild(rotateRightButton);\n  }\n\n  // Rotate the selected object\n  function rotateObject(angle) {\n    if (selectedObject) {\n      selectedObject.rotation.y += angle;\n    }\n  }\n\n  // Add remove controls\n  function setupRemoveControls() {\n    const removeButton = document.createElement(\"button\");\n    removeButton.innerText = \"Remove\";\n    removeButton.className = \"remove-button\";\n    removeButton.style.position = \"absolute\";\n    removeButton.style.bottom = \"330px\";\n    removeButton.style.left = \"50%\";\n    removeButton.style.transform = \"translateX(-50%)\";\n    removeButton.addEventListener(\"click\", removeObject);\n    document.body.appendChild(removeButton);\n  }\n\n  // Remove the selected object\n  function removeObject() {\n    if (selectedObject) {\n      scene.remove(selectedObject);\n      const index = placedObjects.indexOf(selectedObject);\n      if (index > -1) {\n        placedObjects.splice(index, 1);\n      }\n      selectedObject = null;\n    }\n  }\n\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session\n            .requestHitTestSource({ space: referenceSpace })\n            .then(function (source) {\n              hitTestSource = source;\n            });\n        });\n\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n\n        hitTestSourceRequested = true;\n      }\n\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n\n          const matrix = hit.getPose(referenceSpace).transform.matrix;\n          const normal = new THREE.Vector3(matrix[4], matrix[5], matrix[6]);\n\n          const angleFromUp = normal.angleTo(new THREE.Vector3(0, 1, 0));\n\n          const verticalThreshold = THREE.MathUtils.degToRad(20);\n\n          if (angleFromUp < verticalThreshold) {\n            reticle.visible = true;\n            reticle.matrix.fromArray(matrix);\n          } else {\n            reticle.visible = false;\n          }\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n\n    renderer.render(scene, camera);\n  }\n\n  return <div className=\"App\"></div>;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}