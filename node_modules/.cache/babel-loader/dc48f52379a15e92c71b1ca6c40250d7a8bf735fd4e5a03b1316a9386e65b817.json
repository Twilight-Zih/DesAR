{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZIHAB\\\\OneDrive\\\\Desktop\\\\Final Year Mesh&Zih\\\\DesAR\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedObject, setSelectedObject] = useState(null);\n  const [placedObjects, setPlacedObjects] = useState([]);\n  const rotateIntervalRef = useRef(null); // Ref for rotation\n\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const reticleRef = useRef(null);\n  const controllerRef = useRef(null);\n  const itemsRef = useRef([]);\n  const hitTestSourceRef = useRef(null);\n  const hitTestSourceRequestedRef = useRef(false);\n  useEffect(() => {\n    init();\n    setupFurnitureSelection();\n    animate();\n\n    // Cleanup on unmount\n    return () => {\n      const rotateInterval = rotateIntervalRef.current; // Copy ref to a local variable\n      if (rotateInterval) {\n        clearInterval(rotateInterval);\n      }\n      if (rendererRef.current) {\n        rendererRef.current.dispose();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Initialize Three.js scene, camera, renderer, ARButton, models, reticle\n  function init() {\n    const myCanvas = document.getElementById(\"canvas\");\n    sceneRef.current = new THREE.Scene();\n    cameraRef.current = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 20);\n    rendererRef.current = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true\n    });\n    rendererRef.current.setPixelRatio(window.devicePixelRatio);\n    rendererRef.current.setSize(window.innerWidth, window.innerHeight);\n    rendererRef.current.xr.enabled = true;\n\n    // Hemisphere Light\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    sceneRef.current.add(light);\n\n    // AR Button\n    const arButton = ARButton.createButton(rendererRef.current, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: {\n        root: document.body\n      }\n    });\n    document.body.appendChild(arButton);\n\n    // Load Models\n    loadModels();\n\n    // Setup Controller\n    controllerRef.current = rendererRef.current.xr.getController(0);\n    sceneRef.current.add(controllerRef.current);\n\n    // Setup Reticle\n    reticleRef.current = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial({\n      color: 0x007bff\n    }));\n    reticleRef.current.matrixAutoUpdate = false;\n    reticleRef.current.visible = false;\n    sceneRef.current.add(reticleRef.current);\n\n    // Handle window resize\n    window.addEventListener(\"resize\", onWindowResize, false);\n\n    // Add \"Place\" button event listener\n    const placeButton = document.querySelector(\".place-button\");\n    placeButton.addEventListener(\"click\", onSelect);\n  }\n\n  // Load GLTF models\n  function loadModels() {\n    const modelPaths = [\"./dylan_armchair_yolk_yellow.glb\", \"./ivan_armchair_mineral_blue.glb\", \"./marble_coffee_table.glb\", \"./flippa_functional_coffee_table_w._storagewalnut.glb\", \"./frame_armchairpetrol_velvet_with_gold_frame.glb\", \"./elnaz_nesting_side_tables_brass__green_marble.glb\"];\n    const loader = new GLTFLoader();\n    modelPaths.forEach((path, index) => {\n      loader.load(path, glb => {\n        const model = glb.scene;\n        model.traverse(child => {\n          if (child.isMesh) {\n            child.castShadow = true;\n          }\n        });\n        itemsRef.current[index] = model;\n      }, undefined, error => {\n        console.error(`Error loading model ${path}:`, error);\n      });\n    });\n  }\n\n  // Setup furniture selection from navbar\n  function setupFurnitureSelection() {\n    const buttons = document.querySelectorAll(\".button-image\");\n    buttons.forEach((button, index) => {\n      button.addEventListener(\"click\", () => {\n        setSelectedObject(index);\n        buttons.forEach(btn => btn.classList.remove(\"selected\"));\n        button.classList.add(\"selected\");\n      });\n    });\n  }\n\n  // Handle window resize\n  function onWindowResize() {\n    cameraRef.current.aspect = window.innerWidth / window.innerHeight;\n    cameraRef.current.updateProjectionMatrix();\n    rendererRef.current.setSize(window.innerWidth, window.innerHeight);\n  }\n\n  // Place object when \"Place\" button is pressed\n  function onSelect() {\n    if (reticleRef.current.visible && selectedObject !== null) {\n      const model = itemsRef.current[selectedObject].clone();\n      model.position.copy(reticleRef.current.position);\n      model.rotation.copy(reticleRef.current.rotation);\n\n      // Ensure placement on floor (Y=0)\n      model.position.y = 0;\n\n      // Check for overlap\n      if (detectOverlap(model)) {\n        showTemporaryWarning();\n        return;\n      }\n\n      // Add to scene and state\n      sceneRef.current.add(model);\n      setPlacedObjects(prev => [...prev, model]);\n\n      // Add event listeners for interaction\n      model.userData = {\n        doubleTap: false\n      };\n    }\n  }\n\n  // Detect if the new model overlaps with existing ones\n  function detectOverlap(newModel) {\n    const threshold = 1; // Adjust as needed\n    for (let obj of placedObjects) {\n      const distance = obj.position.distanceTo(newModel.position);\n      if (distance < threshold) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Show warning message temporarily\n  function showTemporaryWarning() {\n    const warning = document.querySelector(\".warning\");\n    warning.style.display = \"block\";\n    setTimeout(() => {\n      warning.style.display = \"none\";\n    }, 2000); // Display for 2 seconds\n  }\n\n  // Animate loop\n  function animate() {\n    rendererRef.current.setAnimationLoop(render);\n  }\n\n  // Render function\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = rendererRef.current.xr.getReferenceSpace();\n      const session = rendererRef.current.xr.getSession();\n      if (!hitTestSourceRequestedRef.current) {\n        session.requestReferenceSpace(\"viewer\").then(referenceSpace => {\n          session.requestHitTestSource({\n            space: referenceSpace\n          }).then(source => {\n            hitTestSourceRef.current = source;\n          });\n        }).catch(error => {\n          console.error(\"Error requesting hit test source:\", error);\n        });\n        session.addEventListener(\"end\", () => {\n          hitTestSourceRequestedRef.current = false;\n          hitTestSourceRef.current = null;\n        });\n        hitTestSourceRequestedRef.current = true;\n      }\n      if (hitTestSourceRef.current) {\n        const hitTestResults = frame.getHitTestResults(hitTestSourceRef.current);\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          const hitMatrix = new THREE.Matrix4().fromArray(hit.getPose(referenceSpace).transform.matrix);\n          reticleRef.current.visible = true;\n          reticleRef.current.matrix.copy(hitMatrix);\n\n          // Ensure the reticle is placed on the floor by checking the normal\n          const normal = new THREE.Vector3(0, 1, 0); // Assuming floor normal\n          const up = new THREE.Vector3(0, 1, 0);\n          const quaternion = new THREE.Quaternion().setFromRotationMatrix(reticleRef.current.matrix);\n          const rotatedNormal = normal.clone().applyQuaternion(quaternion);\n          const angle = rotatedNormal.angleTo(up);\n          if (angle > Math.PI / 4) {\n            // If the surface is not sufficiently horizontal, hide the reticle\n            reticleRef.current.visible = false;\n          }\n        } else {\n          reticleRef.current.visible = false;\n        }\n      }\n    }\n    rendererRef.current.render(sceneRef.current, cameraRef.current);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AR Furniture Placement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"button-image\",\n          src: \"chair1.png\",\n          alt: \"Chair 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"button-image\",\n          src: \"chair2.png\",\n          alt: \"Chair 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"button-image\",\n          src: \"table1.png\",\n          alt: \"Table 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"canvas\",\n        className: \"my-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"place-button\",\n        children: \"Place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"warning\",\n      style: {\n        display: \"none\"\n      },\n      children: \"Overlap detected! Please try placing in a different spot.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GBTzbhaGfmDRHemzG87FtUT15oM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["THREE","ARButton","GLTFLoader","useEffect","useState","useRef","jsxDEV","_jsxDEV","App","_s","selectedObject","setSelectedObject","placedObjects","setPlacedObjects","rotateIntervalRef","sceneRef","cameraRef","rendererRef","reticleRef","controllerRef","itemsRef","hitTestSourceRef","hitTestSourceRequestedRef","init","setupFurnitureSelection","animate","rotateInterval","current","clearInterval","dispose","myCanvas","document","getElementById","Scene","PerspectiveCamera","window","innerWidth","innerHeight","WebGLRenderer","canvas","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","xr","enabled","light","HemisphereLight","position","set","add","arButton","createButton","requiredFeatures","optionalFeatures","domOverlay","root","body","appendChild","loadModels","getController","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","color","matrixAutoUpdate","visible","addEventListener","onWindowResize","placeButton","querySelector","onSelect","modelPaths","loader","forEach","path","index","load","glb","model","scene","traverse","child","isMesh","castShadow","undefined","error","console","buttons","querySelectorAll","button","btn","classList","remove","aspect","updateProjectionMatrix","clone","copy","rotation","y","detectOverlap","showTemporaryWarning","prev","userData","doubleTap","newModel","threshold","obj","distance","distanceTo","warning","style","display","setTimeout","setAnimationLoop","render","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","catch","hitTestResults","getHitTestResults","length","hit","hitMatrix","Matrix4","fromArray","getPose","transform","matrix","normal","Vector3","up","quaternion","Quaternion","setFromRotationMatrix","rotatedNormal","applyQuaternion","angle","angleTo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","id","_c","$RefreshReg$"],"sources":["C:/Users/ZIHAB/OneDrive/Desktop/Final Year Mesh&Zih/DesAR/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { useEffect, useState, useRef } from \"react\";\n\nfunction App() {\n  const [selectedObject, setSelectedObject] = useState(null);\n  const [placedObjects, setPlacedObjects] = useState([]);\n  const rotateIntervalRef = useRef(null); // Ref for rotation\n\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const reticleRef = useRef(null);\n  const controllerRef = useRef(null);\n  const itemsRef = useRef([]);\n  const hitTestSourceRef = useRef(null);\n  const hitTestSourceRequestedRef = useRef(false);\n\n  useEffect(() => {\n    init();\n    setupFurnitureSelection();\n    animate();\n\n    // Cleanup on unmount\n    return () => {\n      const rotateInterval = rotateIntervalRef.current; // Copy ref to a local variable\n      if (rotateInterval) {\n        clearInterval(rotateInterval);\n      }\n      if (rendererRef.current) {\n        rendererRef.current.dispose();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Initialize Three.js scene, camera, renderer, ARButton, models, reticle\n  function init() {\n    const myCanvas = document.getElementById(\"canvas\");\n    sceneRef.current = new THREE.Scene();\n    cameraRef.current = new THREE.PerspectiveCamera(\n      70,\n      window.innerWidth / window.innerHeight,\n      0.01,\n      20\n    );\n\n    rendererRef.current = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true,\n    });\n    rendererRef.current.setPixelRatio(window.devicePixelRatio);\n    rendererRef.current.setSize(window.innerWidth, window.innerHeight);\n    rendererRef.current.xr.enabled = true;\n\n    // Hemisphere Light\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    sceneRef.current.add(light);\n\n    // AR Button\n    const arButton = ARButton.createButton(rendererRef.current, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: { root: document.body },\n    });\n    document.body.appendChild(arButton);\n\n    // Load Models\n    loadModels();\n\n    // Setup Controller\n    controllerRef.current = rendererRef.current.xr.getController(0);\n    sceneRef.current.add(controllerRef.current);\n\n    // Setup Reticle\n    reticleRef.current = new THREE.Mesh(\n      new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2),\n      new THREE.MeshBasicMaterial({ color: 0x007bff })\n    );\n    reticleRef.current.matrixAutoUpdate = false;\n    reticleRef.current.visible = false;\n    sceneRef.current.add(reticleRef.current);\n\n    // Handle window resize\n    window.addEventListener(\"resize\", onWindowResize, false);\n\n    // Add \"Place\" button event listener\n    const placeButton = document.querySelector(\".place-button\");\n    placeButton.addEventListener(\"click\", onSelect);\n  }\n\n  // Load GLTF models\n  function loadModels() {\n    const modelPaths = [\n      \"./dylan_armchair_yolk_yellow.glb\",\n      \"./ivan_armchair_mineral_blue.glb\",\n      \"./marble_coffee_table.glb\",\n      \"./flippa_functional_coffee_table_w._storagewalnut.glb\",\n      \"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\n      \"./elnaz_nesting_side_tables_brass__green_marble.glb\",\n    ];\n    const loader = new GLTFLoader();\n\n    modelPaths.forEach((path, index) => {\n      loader.load(\n        path,\n        (glb) => {\n          const model = glb.scene;\n          model.traverse((child) => {\n            if (child.isMesh) {\n              child.castShadow = true;\n            }\n          });\n          itemsRef.current[index] = model;\n        },\n        undefined,\n        (error) => {\n          console.error(`Error loading model ${path}:`, error);\n        }\n      );\n    });\n  }\n\n  // Setup furniture selection from navbar\n  function setupFurnitureSelection() {\n    const buttons = document.querySelectorAll(\".button-image\");\n    buttons.forEach((button, index) => {\n      button.addEventListener(\"click\", () => {\n        setSelectedObject(index);\n        buttons.forEach((btn) => btn.classList.remove(\"selected\"));\n        button.classList.add(\"selected\");\n      });\n    });\n  }\n\n  // Handle window resize\n  function onWindowResize() {\n    cameraRef.current.aspect = window.innerWidth / window.innerHeight;\n    cameraRef.current.updateProjectionMatrix();\n    rendererRef.current.setSize(window.innerWidth, window.innerHeight);\n  }\n\n  // Place object when \"Place\" button is pressed\n  function onSelect() {\n    if (reticleRef.current.visible && selectedObject !== null) {\n      const model = itemsRef.current[selectedObject].clone();\n      model.position.copy(reticleRef.current.position);\n      model.rotation.copy(reticleRef.current.rotation);\n\n      // Ensure placement on floor (Y=0)\n      model.position.y = 0;\n\n      // Check for overlap\n      if (detectOverlap(model)) {\n        showTemporaryWarning();\n        return;\n      }\n\n      // Add to scene and state\n      sceneRef.current.add(model);\n      setPlacedObjects((prev) => [...prev, model]);\n\n      // Add event listeners for interaction\n      model.userData = { doubleTap: false };\n    }\n  }\n\n  // Detect if the new model overlaps with existing ones\n  function detectOverlap(newModel) {\n    const threshold = 1; // Adjust as needed\n    for (let obj of placedObjects) {\n      const distance = obj.position.distanceTo(newModel.position);\n      if (distance < threshold) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Show warning message temporarily\n  function showTemporaryWarning() {\n    const warning = document.querySelector(\".warning\");\n    warning.style.display = \"block\";\n    setTimeout(() => {\n      warning.style.display = \"none\";\n    }, 2000); // Display for 2 seconds\n  }\n\n  // Animate loop\n  function animate() {\n    rendererRef.current.setAnimationLoop(render);\n  }\n\n  // Render function\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = rendererRef.current.xr.getReferenceSpace();\n      const session = rendererRef.current.xr.getSession();\n\n      if (!hitTestSourceRequestedRef.current) {\n        session\n          .requestReferenceSpace(\"viewer\")\n          .then((referenceSpace) => {\n            session\n              .requestHitTestSource({ space: referenceSpace })\n              .then((source) => {\n                hitTestSourceRef.current = source;\n              });\n          })\n          .catch((error) => {\n            console.error(\"Error requesting hit test source:\", error);\n          });\n\n        session.addEventListener(\"end\", () => {\n          hitTestSourceRequestedRef.current = false;\n          hitTestSourceRef.current = null;\n        });\n\n        hitTestSourceRequestedRef.current = true;\n      }\n\n      if (hitTestSourceRef.current) {\n        const hitTestResults = frame.getHitTestResults(hitTestSourceRef.current);\n\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          const hitMatrix = new THREE.Matrix4().fromArray(hit.getPose(referenceSpace).transform.matrix);\n\n          reticleRef.current.visible = true;\n          reticleRef.current.matrix.copy(hitMatrix);\n\n          // Ensure the reticle is placed on the floor by checking the normal\n          const normal = new THREE.Vector3(0, 1, 0); // Assuming floor normal\n          const up = new THREE.Vector3(0, 1, 0);\n          const quaternion = new THREE.Quaternion().setFromRotationMatrix(reticleRef.current.matrix);\n          const rotatedNormal = normal.clone().applyQuaternion(quaternion);\n\n          const angle = rotatedNormal.angleTo(up);\n          if (angle > Math.PI / 4) {\n            // If the surface is not sufficiently horizontal, hide the reticle\n            reticleRef.current.visible = false;\n          }\n        } else {\n          reticleRef.current.visible = false;\n        }\n      }\n    }\n\n    rendererRef.current.render(sceneRef.current, cameraRef.current);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"navbar\">\n        <h1>AR Furniture Placement</h1>\n        <div className=\"button-container\">\n          <img className=\"button-image\" src=\"chair1.png\" alt=\"Chair 1\" />\n          <img className=\"button-image\" src=\"chair2.png\" alt=\"Chair 2\" />\n          <img className=\"button-image\" src=\"table1.png\" alt=\"Table 1\" />\n        </div>\n      </div>\n\n      <div className=\"canvas-container\">\n        <canvas id=\"canvas\" className=\"my-canvas\" />\n        <button className=\"place-button\">Place</button>\n      </div>\n\n      <div className=\"warning\" style={{ display: \"none\" }}>\n        Overlap detected! Please try placing in a different spot.\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}