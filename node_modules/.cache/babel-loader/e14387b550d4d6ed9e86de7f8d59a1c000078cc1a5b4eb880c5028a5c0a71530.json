{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZIHAB\\\\OneDrive\\\\Desktop\\\\Final Year Mesh&Zih\\\\DesAR\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n  let scene, camera, renderer;\n  let models = [\"./dylan_armchair_yolk_yellow.glb\", \"./ivan_armchair_mineral_blue.glb\", \"./marble_coffee_table.glb\", \"./flippa_functional_coffee_table_w._storagewalnut.glb\", \"./frame_armchairpetrol_velvet_with_gold_frame.glb\", \"./elnaz_nesting_side_tables_brass__green_marble.glb\"];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01];\n  let items = [];\n  let itemSelectedIndex = 0;\n  let controller;\n  let selectedObject = null; // To store the selected object for rotation/removal\n\n  // Array to store positions of placed objects\n  let placedObjects = [];\n  const MIN_DISTANCE_BETWEEN_OBJECTS = 1; // Minimum distance between placed objects\n\n  init();\n  setupFurnitureSelection();\n  setupRotationControls(); // Set up rotation buttons\n  setupRemoveControls(); // Set up remove button\n  animate();\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(70, myCanvas.innerWidth / myCanvas.innerHeight, 0.01, 20);\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n\n    // AR Button\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: {\n        root: document.body\n      }\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    // Load Models\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        items[i] = model;\n      });\n    }\n    controller = renderer.xr.getController(0);\n    scene.add(controller);\n\n    // Reticle\n    reticle = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial());\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    // Add Place Button\n    const placeButton = document.createElement(\"button\");\n    placeButton.innerText = \"Place\";\n    placeButton.className = \"place-button\";\n    placeButton.style.position = \"absolute\";\n    placeButton.style.bottom = \"230px\";\n    placeButton.style.left = \"50%\";\n    placeButton.style.transform = \"translateX(-50%)\";\n    placeButton.addEventListener(\"click\", onPlaceButtonClicked);\n    document.body.appendChild(placeButton);\n  }\n  function onPlaceButtonClicked() {\n    if (reticle.visible) {\n      const newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n\n      // Decompose reticle's position and apply to new model\n      reticle.matrix.decompose(newModel.position, newModel.quaternion, newModel.scale);\n\n      // Check if the object is far enough from existing objects\n      if (canPlaceObject(newModel.position)) {\n        // Set the scale of the new model\n        let scaleFactor = modelScaleFactor[itemSelectedIndex];\n        newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n\n        // Add the new model to the scene\n        scene.add(newModel);\n\n        // Make the object selectable\n        newModel.userData.selectable = true;\n        newModel.userData.id = placedObjects.length;\n\n        // Add event listener for object selection\n        newModel.addEventListener(\"select\", () => {\n          selectObject(newModel);\n        });\n\n        // Store the newly placed object\n        placedObjects.push(newModel);\n\n        // Select the new object\n        selectObject(newModel);\n      } else {\n        console.log(\"Object is too close to another object.\");\n      }\n    }\n  }\n  function canPlaceObject(position) {\n    for (let i = 0; i < placedObjects.length; i++) {\n      const distance = placedObjects[i].position.distanceTo(position);\n      if (distance < MIN_DISTANCE_BETWEEN_OBJECTS) {\n        return false; // Too close to another object\n      }\n    }\n\n    return true;\n  }\n\n  // Select an object for rotation/removal\n  function selectObject(object) {\n    selectedObject = object;\n    console.log(\"Selected object:\", selectedObject);\n  }\n\n  // Set up the furniture selection\n  const onClicked = (e, selectItem, index) => {\n    itemSelectedIndex = index;\n\n    // Remove image selection from others to indicate unclicked\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.classList.remove(\"clicked\");\n    }\n\n    // Set image to selected\n    e.target.classList.add(\"clicked\");\n  };\n  function setupFurnitureSelection() {\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.addEventListener(\"beforexrselect\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClicked(e, items[i], i);\n      });\n    }\n  }\n\n  // Add rotation controls\n  function setupRotationControls() {\n    const rotateLeftButton = document.createElement(\"button\");\n    rotateLeftButton.innerText = \"Rotate Left\";\n    rotateLeftButton.className = \"rotate-left-button\";\n    rotateLeftButton.style.position = \"absolute\";\n    rotateLeftButton.style.bottom = \"280px\";\n    rotateLeftButton.style.left = \"20px\";\n    rotateLeftButton.addEventListener(\"click\", () => rotateObject(-Math.PI / 8));\n    document.body.appendChild(rotateLeftButton);\n    const rotateRightButton = document.createElement(\"button\");\n    rotateRightButton.innerText = \"Rotate Right\";\n    rotateRightButton.className = \"rotate-right-button\";\n    rotateRightButton.style.position = \"absolute\";\n    rotateRightButton.style.bottom = \"280px\";\n    rotateRightButton.style.right = \"20px\";\n    rotateRightButton.addEventListener(\"click\", () => rotateObject(Math.PI / 8));\n    document.body.appendChild(rotateRightButton);\n  }\n\n  // Rotate the selected object\n  function rotateObject(angle) {\n    if (selectedObject) {\n      selectedObject.rotation.y += angle; // Rotate along the Y-axis\n    }\n  }\n\n  // Add remove controls\n  function setupRemoveControls() {\n    const removeButton = document.createElement(\"button\");\n    removeButton.innerText = \"Remove\";\n    removeButton.className = \"remove-button\";\n    removeButton.style.position = \"absolute\";\n    removeButton.style.bottom = \"330px\";\n    removeButton.style.left = \"50%\";\n    removeButton.style.transform = \"translateX(-50%)\";\n    removeButton.addEventListener(\"click\", removeObject);\n    document.body.appendChild(removeButton);\n  }\n\n  // Remove the selected object\n  function removeObject() {\n    if (selectedObject) {\n      scene.remove(selectedObject);\n      const index = placedObjects.indexOf(selectedObject);\n      if (index > -1) {\n        placedObjects.splice(index, 1); // Remove from placed objects list\n      }\n\n      selectedObject = null; // Deselect after removal\n    }\n  }\n\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session.requestHitTestSource({\n            space: referenceSpace\n          }).then(function (source) {\n            hitTestSource = source;\n          });\n        });\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n        hitTestSourceRequested = true;\n      }\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          const matrix = hit.getPose(referenceSpace).transform.matrix;\n          const normal = new THREE.Vector3(matrix[4], matrix[5], matrix[6]);\n          const angleFromUp = normal.angleTo(new THREE.Vector3(0, 1, 0));\n          const verticalThreshold = THREE.MathUtils.degToRad(20);\n          if (angleFromUp < verticalThreshold) {\n            reticle.visible = true;\n            reticle.matrix.fromArray(matrix);\n          } else {\n            reticle.visible = false;\n          }\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n    renderer.render(scene, camera);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["THREE","ARButton","GLTFLoader","jsxDEV","_jsxDEV","App","reticle","hitTestSource","hitTestSourceRequested","scene","camera","renderer","models","modelScaleFactor","items","itemSelectedIndex","controller","selectedObject","placedObjects","MIN_DISTANCE_BETWEEN_OBJECTS","init","setupFurnitureSelection","setupRotationControls","setupRemoveControls","animate","myCanvas","document","getElementById","Scene","PerspectiveCamera","innerWidth","innerHeight","light","HemisphereLight","position","set","add","WebGLRenderer","canvas","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","xr","enabled","arButton","createButton","requiredFeatures","optionalFeatures","domOverlay","root","body","style","bottom","appendChild","i","length","loader","load","glb","model","getController","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","matrixAutoUpdate","visible","placeButton","createElement","innerText","className","left","transform","addEventListener","onPlaceButtonClicked","newModel","clone","matrix","decompose","quaternion","scale","canPlaceObject","scaleFactor","userData","selectable","id","selectObject","push","console","log","distance","distanceTo","object","onClicked","e","selectItem","index","el","querySelector","classList","remove","target","preventDefault","stopPropagation","rotateLeftButton","rotateObject","rotateRightButton","right","angle","rotation","y","removeButton","removeObject","indexOf","splice","setAnimationLoop","render","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","hitTestResults","getHitTestResults","hit","getPose","normal","Vector3","angleFromUp","angleTo","verticalThreshold","MathUtils","degToRad","fromArray","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ZIHAB/OneDrive/Desktop/Final Year Mesh&Zih/DesAR/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n\n  let scene, camera, renderer;\n\n  let models = [\n    \"./dylan_armchair_yolk_yellow.glb\",\n    \"./ivan_armchair_mineral_blue.glb\",\n    \"./marble_coffee_table.glb\",\n    \"./flippa_functional_coffee_table_w._storagewalnut.glb\",\n    \"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\n    \"./elnaz_nesting_side_tables_brass__green_marble.glb\",\n  ];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01];\n  let items = [];\n  let itemSelectedIndex = 0;\n\n  let controller;\n  let selectedObject = null; // To store the selected object for rotation/removal\n\n  // Array to store positions of placed objects\n  let placedObjects = [];\n  const MIN_DISTANCE_BETWEEN_OBJECTS = 1; // Minimum distance between placed objects\n\n  init();\n  setupFurnitureSelection();\n  setupRotationControls(); // Set up rotation buttons\n  setupRemoveControls(); // Set up remove button\n  animate();\n\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(\n      70,\n      myCanvas.innerWidth / myCanvas.innerHeight,\n      0.01,\n      20\n    );\n\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n\n    // AR Button\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: { root: document.body },\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    // Load Models\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        items[i] = model;\n      });\n    }\n\n    controller = renderer.xr.getController(0);\n    scene.add(controller);\n\n    // Reticle\n    reticle = new THREE.Mesh(\n      new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2),\n      new THREE.MeshBasicMaterial()\n    );\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    // Add Place Button\n    const placeButton = document.createElement(\"button\");\n    placeButton.innerText = \"Place\";\n    placeButton.className = \"place-button\";\n    placeButton.style.position = \"absolute\";\n    placeButton.style.bottom = \"230px\";\n    placeButton.style.left = \"50%\";\n    placeButton.style.transform = \"translateX(-50%)\";\n    placeButton.addEventListener(\"click\", onPlaceButtonClicked);\n    document.body.appendChild(placeButton);\n  }\n\n  function onPlaceButtonClicked() {\n    if (reticle.visible) {\n      const newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n\n      // Decompose reticle's position and apply to new model\n      reticle.matrix.decompose(\n        newModel.position,\n        newModel.quaternion,\n        newModel.scale\n      );\n\n      // Check if the object is far enough from existing objects\n      if (canPlaceObject(newModel.position)) {\n        // Set the scale of the new model\n        let scaleFactor = modelScaleFactor[itemSelectedIndex];\n        newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n\n        // Add the new model to the scene\n        scene.add(newModel);\n\n        // Make the object selectable\n        newModel.userData.selectable = true;\n        newModel.userData.id = placedObjects.length;\n\n        // Add event listener for object selection\n        newModel.addEventListener(\"select\", () => {\n          selectObject(newModel);\n        });\n\n        // Store the newly placed object\n        placedObjects.push(newModel);\n\n        // Select the new object\n        selectObject(newModel);\n      } else {\n        console.log(\"Object is too close to another object.\");\n      }\n    }\n  }\n\n  function canPlaceObject(position) {\n    for (let i = 0; i < placedObjects.length; i++) {\n      const distance = placedObjects[i].position.distanceTo(position);\n      if (distance < MIN_DISTANCE_BETWEEN_OBJECTS) {\n        return false; // Too close to another object\n      }\n    }\n    return true;\n  }\n\n  // Select an object for rotation/removal\n  function selectObject(object) {\n    selectedObject = object;\n    console.log(\"Selected object:\", selectedObject);\n  }\n\n  // Set up the furniture selection\n  const onClicked = (e, selectItem, index) => {\n    itemSelectedIndex = index;\n\n    // Remove image selection from others to indicate unclicked\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.classList.remove(\"clicked\");\n    }\n\n    // Set image to selected\n    e.target.classList.add(\"clicked\");\n  };\n\n  function setupFurnitureSelection() {\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.addEventListener(\"beforexrselect\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClicked(e, items[i], i);\n      });\n    }\n  }\n\n  // Add rotation controls\n  function setupRotationControls() {\n    const rotateLeftButton = document.createElement(\"button\");\n    rotateLeftButton.innerText = \"Rotate Left\";\n    rotateLeftButton.className = \"rotate-left-button\";\n    rotateLeftButton.style.position = \"absolute\";\n    rotateLeftButton.style.bottom = \"280px\";\n    rotateLeftButton.style.left = \"20px\";\n    rotateLeftButton.addEventListener(\"click\", () => rotateObject(-Math.PI / 8));\n    document.body.appendChild(rotateLeftButton);\n\n    const rotateRightButton = document.createElement(\"button\");\n    rotateRightButton.innerText = \"Rotate Right\";\n    rotateRightButton.className = \"rotate-right-button\";\n    rotateRightButton.style.position = \"absolute\";\n    rotateRightButton.style.bottom = \"280px\";\n    rotateRightButton.style.right = \"20px\";\n    rotateRightButton.addEventListener(\"click\", () => rotateObject(Math.PI / 8));\n    document.body.appendChild(rotateRightButton);\n  }\n\n  // Rotate the selected object\n  function rotateObject(angle) {\n    if (selectedObject) {\n      selectedObject.rotation.y += angle; // Rotate along the Y-axis\n    }\n  }\n\n  // Add remove controls\n  function setupRemoveControls() {\n    const removeButton = document.createElement(\"button\");\n    removeButton.innerText = \"Remove\";\n    removeButton.className = \"remove-button\";\n    removeButton.style.position = \"absolute\";\n    removeButton.style.bottom = \"330px\";\n    removeButton.style.left = \"50%\";\n    removeButton.style.transform = \"translateX(-50%)\";\n    removeButton.addEventListener(\"click\", removeObject);\n    document.body.appendChild(removeButton);\n  }\n\n  // Remove the selected object\n  function removeObject() {\n    if (selectedObject) {\n      scene.remove(selectedObject);\n      const index = placedObjects.indexOf(selectedObject);\n      if (index > -1) {\n        placedObjects.splice(index, 1); // Remove from placed objects list\n      }\n      selectedObject = null; // Deselect after removal\n    }\n  }\n\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session\n            .requestHitTestSource({ space: referenceSpace })\n            .then(function (source) {\n              hitTestSource = source;\n            });\n        });\n\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n\n        hitTestSourceRequested = true;\n      }\n\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n\n          const matrix = hit.getPose(referenceSpace).transform.matrix;\n          const normal = new THREE.Vector3(matrix[4], matrix[5], matrix[6]);\n\n          const angleFromUp = normal.angleTo(new THREE.Vector3(0, 1, 0));\n\n          const verticalThreshold = THREE.MathUtils.degToRad(20);\n\n          if (angleFromUp < verticalThreshold) {\n            reticle.visible = true;\n            reticle.matrix.fromArray(matrix);\n          } else {\n            reticle.visible = false;\n          }\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n\n    renderer.render(scene, camera);\n  }\n\n  return <div className=\"App\"></div>;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}