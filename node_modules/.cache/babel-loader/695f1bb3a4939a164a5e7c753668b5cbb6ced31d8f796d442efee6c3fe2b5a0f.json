{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZIHAB\\\\OneDrive\\\\Desktop\\\\Final Year Mesh&Zih\\\\DesAR\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n  let scene, camera, renderer;\n  let modelScenes = []; // Store the loaded models as scenes for thumbnail generation\n\n  let models = [\"./dylan_armchair_yolk_yellow.glb\", \"./ivan_armchair_mineral_blue.glb\", \"./marble_coffee_table.glb\", \"./flippa_functional_coffee_table_w._storagewalnut.glb\", \"./frame_armchairpetrol_velvet_with_gold_frame.glb\", \"./elnaz_nesting_side_tables_brass__green_marble.glb\"];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01];\n  let items = [];\n  let itemSelectedIndex = 0;\n  let controller;\n  let lastPlacedObject = null; // Store the last placed object\n\n  // Stack to keep track of placed objects\n  let placedObjects = [];\n  const MIN_DISTANCE_BETWEEN_OBJECTS = 0.9; // Minimum distance between placed objects\n\n  init();\n  setupFurnitureSelection();\n  setupRotationControls(); // Set up rotation buttons\n  setupRemoveButton(); // Set up remove button\n  animate();\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(70, myCanvas.innerWidth / myCanvas.innerHeight, 0.01, 20);\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n\n    // AR Button\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: {\n        root: document.body\n      }\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    // Load Models and set up thumbnails\n    loadModelsForThumbnails();\n    controller = renderer.xr.getController(0);\n    scene.add(controller);\n\n    // Reticle\n    reticle = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial());\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    // Add Place Button\n    const placeButton = document.createElement(\"button\");\n    placeButton.innerText = \"Place\";\n    placeButton.className = \"place-button\";\n    placeButton.style.position = \"absolute\";\n    placeButton.style.bottom = \"270px\";\n    placeButton.style.left = \"50%\";\n    placeButton.style.transform = \"translateX(-50%)\";\n    placeButton.addEventListener(\"click\", onPlaceButtonClicked);\n    document.body.appendChild(placeButton);\n  }\n\n  // Function to load models for the thumbnails\n  function loadModelsForThumbnails() {\n    const loader = new GLTFLoader();\n    const offscreenRenderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    offscreenRenderer.setSize(256, 256); // Thumbnail size\n\n    models.forEach((modelUrl, index) => {\n      loader.load(modelUrl, glb => {\n        const modelScene = glb.scene;\n        modelScene.scale.set(0.01, 0.01, 0.01); // Adjust scale for thumbnails\n        modelScenes.push(modelScene);\n\n        // Create a scene for rendering the thumbnail\n        const thumbnailScene = new THREE.Scene();\n        const thumbnailCamera = new THREE.PerspectiveCamera(45, 1, 0.01, 20);\n        thumbnailCamera.position.set(0, 0.5, 1.5); // Position the camera for thumbnail\n\n        const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n        light.position.set(0.5, 1, 0.25);\n        thumbnailScene.add(light);\n        thumbnailScene.add(modelScene);\n\n        // Render the model to the offscreen canvas\n        offscreenRenderer.render(thumbnailScene, thumbnailCamera);\n        const imgDataUrl = offscreenRenderer.domElement.toDataURL(\"image/png\");\n\n        // Set the image as a background for the navbar item\n        const el = document.querySelector(`#item${index}`);\n        el.style.backgroundImage = `url(${imgDataUrl})`;\n        el.style.backgroundSize = \"contain\";\n        el.style.backgroundRepeat = \"no-repeat\";\n        el.style.backgroundPosition = \"center\";\n      });\n    });\n  }\n  function onPlaceButtonClicked() {\n    if (reticle.visible) {\n      // Ensure the model is loaded and clone it safely\n      const originalModel = items[itemSelectedIndex];\n      if (!originalModel) {\n        console.error('Model not found or not yet loaded.');\n        return;\n      }\n      const newModel = originalModel.clone(); // Attempt to clone the model\n\n      if (!newModel) {\n        console.error('Error cloning the model');\n        return;\n      }\n\n      // Manually clone any children if needed (sometimes helps if clone() fails)\n      newModel.traverse(child => {\n        if (child.isMesh) {\n          child.material = child.material.clone(); // Clone material\n          child.geometry = child.geometry.clone(); // Clone geometry\n        }\n      });\n\n      newModel.visible = true;\n\n      // Decompose reticle's position and apply to new model\n      reticle.matrix.decompose(newModel.position, newModel.quaternion, newModel.scale);\n\n      // Check if the object is far enough from existing objects\n      if (canPlaceObject(newModel.position)) {\n        // Set the scale of the new model\n        let scaleFactor = modelScaleFactor[itemSelectedIndex];\n        newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n\n        // Add the new model to the scene\n        scene.add(newModel);\n\n        // Store the new model in the placed objects stack\n        placedObjects.push(newModel);\n\n        // Keep reference to the last placed object\n        lastPlacedObject = newModel;\n      } else {\n        console.log(\"Object is too close to another object.\");\n      }\n    }\n  }\n  function canPlaceObject(position) {\n    for (let i = 0; i < placedObjects.length; i++) {\n      const distance = placedObjects[i].position.distanceTo(position);\n      if (distance < MIN_DISTANCE_BETWEEN_OBJECTS) {\n        return false; // Too close to another object\n      }\n    }\n\n    return true;\n  }\n  function setupFurnitureSelection() {\n    models.forEach((_, index) => {\n      const el = document.querySelector(`#item${index}`);\n      el.addEventListener(\"beforexrselect\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n        itemSelectedIndex = index;\n\n        // Remove selection state from others\n        models.forEach((_, i) => {\n          document.querySelector(`#item${i}`).classList.remove(\"clicked\");\n        });\n\n        // Highlight the selected item\n        el.classList.add(\"clicked\");\n      });\n    });\n  }\n  function setupRotationControls() {\n    const rotateLeftButton = document.createElement(\"button\");\n    rotateLeftButton.innerText = \"Rotate Left\";\n    rotateLeftButton.className = \"rotate-left-button\";\n    rotateLeftButton.style.position = \"absolute\";\n    rotateLeftButton.style.bottom = \"200px\";\n    rotateLeftButton.style.left = \"20px\";\n    rotateLeftButton.addEventListener(\"click\", () => rotateObject(-Math.PI / 8));\n    document.body.appendChild(rotateLeftButton);\n    const rotateRightButton = document.createElement(\"button\");\n    rotateRightButton.innerText = \"Rotate Right\";\n    rotateRightButton.className = \"rotate-right-button\";\n    rotateRightButton.style.position = \"absolute\";\n    rotateRightButton.style.bottom = \"200px\";\n    rotateRightButton.style.right = \"20px\";\n    rotateRightButton.addEventListener(\"click\", () => rotateObject(Math.PI / 8));\n    document.body.appendChild(rotateRightButton);\n  }\n  function rotateObject(angle) {\n    if (lastPlacedObject) {\n      lastPlacedObject.rotation.y += angle;\n    }\n  }\n  function setupRemoveButton() {\n    const removeButton = document.createElement(\"button\");\n    removeButton.innerText = \"Remove\";\n    removeButton.className = \"remove-button\";\n    removeButton.style.position = \"absolute\";\n    removeButton.style.bottom = \"220px\";\n    removeButton.style.left = \"50%\";\n    removeButton.style.transform = \"translateX(-50%)\";\n    removeButton.addEventListener(\"click\", removeLastObject);\n    document.body.appendChild(removeButton);\n  }\n  function removeLastObject() {\n    if (lastPlacedObject) {\n      scene.remove(lastPlacedObject);\n      placedObjects.pop();\n      lastPlacedObject = placedObjects.length > 0 ? placedObjects[placedObjects.length - 1] : null;\n    }\n  }\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session.requestHitTestSource({\n            space: referenceSpace\n          }).then(function (source) {\n            hitTestSource = source;\n          });\n        });\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n        hitTestSourceRequested = true;\n      }\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          const matrix = hit.getPose(referenceSpace).transform.matrix;\n          const normal = new THREE.Vector3(matrix[4], matrix[5], matrix[6]);\n          const angleFromUp = normal.angleTo(new THREE.Vector3(0, 1, 0));\n          const verticalThreshold = THREE.MathUtils.degToRad(20);\n          if (angleFromUp < verticalThreshold) {\n            reticle.visible = true;\n            reticle.matrix.fromArray(matrix);\n          } else {\n            reticle.visible = false;\n          }\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n    renderer.render(scene, camera);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["THREE","ARButton","GLTFLoader","jsxDEV","_jsxDEV","App","reticle","hitTestSource","hitTestSourceRequested","scene","camera","renderer","modelScenes","models","modelScaleFactor","items","itemSelectedIndex","controller","lastPlacedObject","placedObjects","MIN_DISTANCE_BETWEEN_OBJECTS","init","setupFurnitureSelection","setupRotationControls","setupRemoveButton","animate","myCanvas","document","getElementById","Scene","PerspectiveCamera","innerWidth","innerHeight","light","HemisphereLight","position","set","add","WebGLRenderer","canvas","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","xr","enabled","arButton","createButton","requiredFeatures","optionalFeatures","domOverlay","root","body","style","bottom","appendChild","loadModelsForThumbnails","getController","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","matrixAutoUpdate","visible","placeButton","createElement","innerText","className","left","transform","addEventListener","onPlaceButtonClicked","loader","offscreenRenderer","forEach","modelUrl","index","load","glb","modelScene","scale","push","thumbnailScene","thumbnailCamera","render","imgDataUrl","domElement","toDataURL","el","querySelector","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","originalModel","console","error","newModel","clone","traverse","child","isMesh","material","geometry","matrix","decompose","quaternion","canPlaceObject","scaleFactor","log","i","length","distance","distanceTo","_","e","preventDefault","stopPropagation","classList","remove","rotateLeftButton","rotateObject","rotateRightButton","right","angle","rotation","y","removeButton","removeLastObject","pop","setAnimationLoop","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","hitTestResults","getHitTestResults","hit","getPose","normal","Vector3","angleFromUp","angleTo","verticalThreshold","MathUtils","degToRad","fromArray","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ZIHAB/OneDrive/Desktop/Final Year Mesh&Zih/DesAR/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n\n  let scene, camera, renderer;\n  let modelScenes = []; // Store the loaded models as scenes for thumbnail generation\n\n  let models = [\n    \"./dylan_armchair_yolk_yellow.glb\",\n    \"./ivan_armchair_mineral_blue.glb\",\n    \"./marble_coffee_table.glb\",\n    \"./flippa_functional_coffee_table_w._storagewalnut.glb\",\n    \"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\n    \"./elnaz_nesting_side_tables_brass__green_marble.glb\",\n  ];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01];\n  let items = [];\n  let itemSelectedIndex = 0;\n\n  let controller;\n  let lastPlacedObject = null; // Store the last placed object\n\n  // Stack to keep track of placed objects\n  let placedObjects = [];\n  const MIN_DISTANCE_BETWEEN_OBJECTS = 0.9; // Minimum distance between placed objects\n\n  init();\n  setupFurnitureSelection();\n  setupRotationControls(); // Set up rotation buttons\n  setupRemoveButton(); // Set up remove button\n  animate();\n\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(\n      70,\n      myCanvas.innerWidth / myCanvas.innerHeight,\n      0.01,\n      20\n    );\n\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n\n    // AR Button\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: { root: document.body },\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    // Load Models and set up thumbnails\n    loadModelsForThumbnails();\n\n    controller = renderer.xr.getController(0);\n    scene.add(controller);\n\n    // Reticle\n    reticle = new THREE.Mesh(\n      new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2),\n      new THREE.MeshBasicMaterial()\n    );\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    // Add Place Button\n    const placeButton = document.createElement(\"button\");\n    placeButton.innerText = \"Place\";\n    placeButton.className = \"place-button\";\n    placeButton.style.position = \"absolute\";\n    placeButton.style.bottom = \"270px\";\n    placeButton.style.left = \"50%\";\n    placeButton.style.transform = \"translateX(-50%)\";\n    placeButton.addEventListener(\"click\", onPlaceButtonClicked);\n    document.body.appendChild(placeButton);\n  }\n\n  // Function to load models for the thumbnails\n  function loadModelsForThumbnails() {\n    const loader = new GLTFLoader();\n    const offscreenRenderer = new THREE.WebGLRenderer({ alpha: true });\n    offscreenRenderer.setSize(256, 256); // Thumbnail size\n\n    models.forEach((modelUrl, index) => {\n      loader.load(modelUrl, (glb) => {\n        const modelScene = glb.scene;\n        modelScene.scale.set(0.01, 0.01, 0.01); // Adjust scale for thumbnails\n        modelScenes.push(modelScene);\n\n        // Create a scene for rendering the thumbnail\n        const thumbnailScene = new THREE.Scene();\n        const thumbnailCamera = new THREE.PerspectiveCamera(45, 1, 0.01, 20);\n        thumbnailCamera.position.set(0, 0.5, 1.5); // Position the camera for thumbnail\n\n        const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n        light.position.set(0.5, 1, 0.25);\n        thumbnailScene.add(light);\n        thumbnailScene.add(modelScene);\n\n        // Render the model to the offscreen canvas\n        offscreenRenderer.render(thumbnailScene, thumbnailCamera);\n        const imgDataUrl = offscreenRenderer.domElement.toDataURL(\"image/png\");\n\n        // Set the image as a background for the navbar item\n        const el = document.querySelector(`#item${index}`);\n        el.style.backgroundImage = `url(${imgDataUrl})`;\n        el.style.backgroundSize = \"contain\";\n        el.style.backgroundRepeat = \"no-repeat\";\n        el.style.backgroundPosition = \"center\";\n      });\n    });\n  }\n\n  function onPlaceButtonClicked() {\n    if (reticle.visible) {\n      // Ensure the model is loaded and clone it safely\n      const originalModel = items[itemSelectedIndex];\n      \n      if (!originalModel) {\n        console.error('Model not found or not yet loaded.');\n        return;\n      }\n  \n      const newModel = originalModel.clone(); // Attempt to clone the model\n  \n      if (!newModel) {\n        console.error('Error cloning the model');\n        return;\n      }\n  \n      // Manually clone any children if needed (sometimes helps if clone() fails)\n      newModel.traverse((child) => {\n        if (child.isMesh) {\n          child.material = child.material.clone();  // Clone material\n          child.geometry = child.geometry.clone();  // Clone geometry\n        }\n      });\n  \n      newModel.visible = true;\n  \n      // Decompose reticle's position and apply to new model\n      reticle.matrix.decompose(\n        newModel.position,\n        newModel.quaternion,\n        newModel.scale\n      );\n  \n      // Check if the object is far enough from existing objects\n      if (canPlaceObject(newModel.position)) {\n        // Set the scale of the new model\n        let scaleFactor = modelScaleFactor[itemSelectedIndex];\n        newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n  \n        // Add the new model to the scene\n        scene.add(newModel);\n  \n        // Store the new model in the placed objects stack\n        placedObjects.push(newModel);\n  \n        // Keep reference to the last placed object\n        lastPlacedObject = newModel;\n      } else {\n        console.log(\"Object is too close to another object.\");\n      }\n    }\n  }\n\n  function canPlaceObject(position) {\n    for (let i = 0; i < placedObjects.length; i++) {\n      const distance = placedObjects[i].position.distanceTo(position);\n      if (distance < MIN_DISTANCE_BETWEEN_OBJECTS) {\n        return false; // Too close to another object\n      }\n    }\n    return true;\n  }\n\n  function setupFurnitureSelection() {\n    models.forEach((_, index) => {\n      const el = document.querySelector(`#item${index}`);\n      el.addEventListener(\"beforexrselect\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        itemSelectedIndex = index;\n\n        // Remove selection state from others\n        models.forEach((_, i) => {\n          document.querySelector(`#item${i}`).classList.remove(\"clicked\");\n        });\n\n        // Highlight the selected item\n        el.classList.add(\"clicked\");\n      });\n    });\n  }\n\n  function setupRotationControls() {\n    const rotateLeftButton = document.createElement(\"button\");\n    rotateLeftButton.innerText = \"Rotate Left\";\n    rotateLeftButton.className = \"rotate-left-button\";\n    rotateLeftButton.style.position = \"absolute\";\n    rotateLeftButton.style.bottom = \"200px\";\n    rotateLeftButton.style.left = \"20px\";\n    rotateLeftButton.addEventListener(\"click\", () => rotateObject(-Math.PI / 8));\n    document.body.appendChild(rotateLeftButton);\n\n    const rotateRightButton = document.createElement(\"button\");\n    rotateRightButton.innerText = \"Rotate Right\";\n    rotateRightButton.className = \"rotate-right-button\";\n    rotateRightButton.style.position = \"absolute\";\n    rotateRightButton.style.bottom = \"200px\";\n    rotateRightButton.style.right = \"20px\";\n    rotateRightButton.addEventListener(\"click\", () => rotateObject(Math.PI / 8));\n    document.body.appendChild(rotateRightButton);\n  }\n\n  function rotateObject(angle) {\n    if (lastPlacedObject) {\n      lastPlacedObject.rotation.y += angle;\n    }\n  }\n\n  function setupRemoveButton() {\n    const removeButton = document.createElement(\"button\");\n    removeButton.innerText = \"Remove\";\n    removeButton.className = \"remove-button\";\n    removeButton.style.position = \"absolute\";\n    removeButton.style.bottom = \"220px\";\n    removeButton.style.left = \"50%\";\n    removeButton.style.transform = \"translateX(-50%)\";\n    removeButton.addEventListener(\"click\", removeLastObject);\n    document.body.appendChild(removeButton);\n  }\n\n  function removeLastObject() {\n    if (lastPlacedObject) {\n      scene.remove(lastPlacedObject);\n      placedObjects.pop();\n      lastPlacedObject =\n        placedObjects.length > 0 ? placedObjects[placedObjects.length - 1] : null;\n    }\n  }\n\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session\n            .requestHitTestSource({ space: referenceSpace })\n            .then(function (source) {\n              hitTestSource = source;\n            });\n        });\n\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n\n        hitTestSourceRequested = true;\n      }\n\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          const matrix = hit.getPose(referenceSpace).transform.matrix;\n          const normal = new THREE.Vector3(matrix[4], matrix[5], matrix[6]);\n          const angleFromUp = normal.angleTo(new THREE.Vector3(0, 1, 0));\n          const verticalThreshold = THREE.MathUtils.degToRad(20);\n\n          if (angleFromUp < verticalThreshold) {\n            reticle.visible = true;\n            reticle.matrix.fromArray(matrix);\n          } else {\n            reticle.visible = false;\n          }\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n\n    renderer.render(scene, camera);\n  }\n\n  return <div className=\"App\"></div>;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}