{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZIHAB\\\\OneDrive\\\\Desktop\\\\Final Year Mesh&Zih\\\\DesAR\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n// import { XREstimatedLight } from \"three/examples/jsm/webxr/XREstimatedLight\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n  let scene, camera, renderer;\n  let models = [\"./dylan_armchair_yolk_yellow.glb\", \"./ivan_armchair_mineral_blue.glb\", \"./marble_coffee_table.glb\", \"./flippa_functional_coffee_table_w._storagewalnut.glb\", \"./frame_armchairpetrol_velvet_with_gold_frame.glb\", \"./elnaz_nesting_side_tables_brass__green_marble.glb\", \"./tea-table.glb\", \"./sofa1.glb\", \"./brown-sofa.glb\", \"./red-sofa.glb\"];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01, 1, 1, 10, 10];\n  let items = [];\n  let itemSelectedIndex = 0;\n  let controller;\n  let lastPlacedObject = null; // Store the last placed object\n\n  // Stack to keep track of placed objects\n  let placedObjects = [];\n  const MIN_DISTANCE_BETWEEN_OBJECTS = 0.9; // Minimum distance between placed objects\n\n  init();\n  setupFurnitureSelection();\n  setupRotationControls(); // Set up rotation buttons\n  setupRemoveButton(); // Set up remove button\n  animate();\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(70, myCanvas.innerWidth / myCanvas.innerHeight, 0.01, 20);\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n\n    // AR Button\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: {\n        root: document.body\n      }\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    // Load Models\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        items[i] = model;\n      });\n    }\n    controller = renderer.xr.getController(0);\n    scene.add(controller);\n\n    // Reticle\n    reticle = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial());\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    // Add Place Button\n    const placeButton = document.createElement(\"button\");\n    placeButton.innerText = \"Place\";\n    placeButton.className = \"place-button\";\n    placeButton.addEventListener(\"click\", onPlaceButtonClicked);\n    document.body.appendChild(placeButton);\n  }\n  function onPlaceButtonClicked() {\n    if (reticle.visible) {\n      const newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n\n      // Decompose reticle's position and apply to new model\n      reticle.matrix.decompose(newModel.position, newModel.quaternion, newModel.scale);\n\n      // Check if the object is far enough from existing objects\n      if (canPlaceObject(newModel.position)) {\n        // Set the scale of the new model\n        let scaleFactor = modelScaleFactor[itemSelectedIndex];\n        newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n\n        // Add the new model to the scene\n        scene.add(newModel);\n\n        // Store the new model in the placed objects stack\n        placedObjects.push(newModel);\n\n        // Keep reference to the last placed object\n        lastPlacedObject = newModel;\n      } else {\n        console.log(\"Object is too close to another object.\");\n      }\n    }\n  }\n  function canPlaceObject(position) {\n    for (let i = 0; i < placedObjects.length; i++) {\n      const distance = placedObjects[i].position.distanceTo(position);\n      if (distance < MIN_DISTANCE_BETWEEN_OBJECTS) {\n        return false; // Too close to another object\n      }\n    }\n\n    return true;\n  }\n\n  // Set up the furniture selection\n  const onClicked = (e, selectItem, index) => {\n    itemSelectedIndex = index;\n\n    // Remove image selection from others to indicate unclicked\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.classList.remove(\"clicked\");\n    }\n\n    // Set image to selected\n    e.target.classList.add(\"clicked\");\n  };\n  function setupFurnitureSelection() {\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.addEventListener(\"beforexrselect\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClicked(e, items[i], i);\n      });\n    }\n  }\n\n  // Add rotation controls\n  function setupRotationControls() {\n    const rotateLeftButton = document.createElement(\"button\");\n    rotateLeftButton.innerText = \"Rotate Left\";\n    rotateLeftButton.className = \"rotate-left-button\";\n    rotateLeftButton.addEventListener(\"click\", () => rotateObject(-Math.PI / 8));\n    document.body.appendChild(rotateLeftButton);\n    const rotateRightButton = document.createElement(\"button\");\n    rotateRightButton.innerText = \"Rotate Right\";\n    rotateRightButton.className = \"rotate-right-button\";\n    rotateRightButton.addEventListener(\"click\", () => rotateObject(Math.PI / 8));\n    document.body.appendChild(rotateRightButton);\n  }\n\n  // Rotate the last placed object\n  function rotateObject(angle) {\n    if (lastPlacedObject) {\n      lastPlacedObject.rotation.y += angle; // Rotate along the Y-axis\n    }\n  }\n\n  // Set up remove button\n  function setupRemoveButton() {\n    const removeButton = document.createElement(\"button\");\n    removeButton.innerText = \"Remove\";\n    removeButton.className = \"remove-button\";\n    removeButton.addEventListener(\"click\", removeLastObject);\n    document.body.appendChild(removeButton);\n  }\n\n  // Remove the last placed object\n  function removeLastObject() {\n    if (lastPlacedObject) {\n      scene.remove(lastPlacedObject); // Remove the last placed object from the scene\n\n      // Remove the last object from the stack\n      placedObjects.pop();\n\n      // Update the last placed object to the previous one in the stack\n      lastPlacedObject = placedObjects.length > 0 ? placedObjects[placedObjects.length - 1] : null;\n    }\n  }\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session.requestHitTestSource({\n            space: referenceSpace\n          }).then(function (source) {\n            hitTestSource = source;\n          });\n        });\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n        hitTestSourceRequested = true;\n      }\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          const matrix = hit.getPose(referenceSpace).transform.matrix;\n          const normal = new THREE.Vector3(matrix[4], matrix[5], matrix[6]);\n          const angleFromUp = normal.angleTo(new THREE.Vector3(0, 1, 0));\n          const verticalThreshold = THREE.MathUtils.degToRad(20);\n          if (angleFromUp < verticalThreshold) {\n            reticle.visible = true;\n            reticle.matrix.fromArray(matrix);\n          } else {\n            reticle.visible = false;\n          }\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n    renderer.render(scene, camera);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["THREE","ARButton","GLTFLoader","jsxDEV","_jsxDEV","App","reticle","hitTestSource","hitTestSourceRequested","scene","camera","renderer","models","modelScaleFactor","items","itemSelectedIndex","controller","lastPlacedObject","placedObjects","MIN_DISTANCE_BETWEEN_OBJECTS","init","setupFurnitureSelection","setupRotationControls","setupRemoveButton","animate","myCanvas","document","getElementById","Scene","PerspectiveCamera","innerWidth","innerHeight","light","HemisphereLight","position","set","add","WebGLRenderer","canvas","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","xr","enabled","arButton","createButton","requiredFeatures","optionalFeatures","domOverlay","root","body","style","bottom","appendChild","i","length","loader","load","glb","model","getController","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","matrixAutoUpdate","visible","placeButton","createElement","innerText","className","addEventListener","onPlaceButtonClicked","newModel","clone","matrix","decompose","quaternion","scale","canPlaceObject","scaleFactor","push","console","log","distance","distanceTo","onClicked","e","selectItem","index","el","querySelector","classList","remove","target","preventDefault","stopPropagation","rotateLeftButton","rotateObject","rotateRightButton","angle","rotation","y","removeButton","removeLastObject","pop","setAnimationLoop","render","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","hitTestResults","getHitTestResults","hit","getPose","transform","normal","Vector3","angleFromUp","angleTo","verticalThreshold","MathUtils","degToRad","fromArray","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ZIHAB/OneDrive/Desktop/Final Year Mesh&Zih/DesAR/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n// import { XREstimatedLight } from \"three/examples/jsm/webxr/XREstimatedLight\";\n\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n\n  let scene, camera, renderer;\n\n  let models = [\n    \"./dylan_armchair_yolk_yellow.glb\",\n    \"./ivan_armchair_mineral_blue.glb\",\n    \"./marble_coffee_table.glb\",\n    \"./flippa_functional_coffee_table_w._storagewalnut.glb\",\n    \"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\n    \"./elnaz_nesting_side_tables_brass__green_marble.glb\",\n    \"./tea-table.glb\",\n    \"./sofa1.glb\",\n    \"./brown-sofa.glb\",\n    \"./red-sofa.glb\",\n    \n  ];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01, 1, 1, 10, 10];\n  let items = [];\n  let itemSelectedIndex = 0;\n\n  let controller;\n  let lastPlacedObject = null; // Store the last placed object\n\n  // Stack to keep track of placed objects\n  let placedObjects = [];\n  const MIN_DISTANCE_BETWEEN_OBJECTS = 0.9; // Minimum distance between placed objects\n\n  init();\n  setupFurnitureSelection();\n  setupRotationControls(); // Set up rotation buttons\n  setupRemoveButton(); // Set up remove button\n  animate();\n\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(\n      70,\n      myCanvas.innerWidth / myCanvas.innerHeight,\n      0.01,\n      20\n    );\n\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n\n    // AR Button\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: { root: document.body },\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    // Load Models\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        items[i] = model;\n      });\n    }\n\n    controller = renderer.xr.getController(0);\n    scene.add(controller);\n\n    // Reticle\n    reticle = new THREE.Mesh(\n      new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2),\n      new THREE.MeshBasicMaterial()\n    );\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    // Add Place Button\n    const placeButton = document.createElement(\"button\");\n    placeButton.innerText = \"Place\";\n    placeButton.className = \"place-button\";\n    placeButton.addEventListener(\"click\", onPlaceButtonClicked);\n    document.body.appendChild(placeButton);\n  }\n\n  function onPlaceButtonClicked() {\n    if (reticle.visible) {\n      const newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n\n      // Decompose reticle's position and apply to new model\n      reticle.matrix.decompose(\n        newModel.position,\n        newModel.quaternion,\n        newModel.scale\n      );\n\n      // Check if the object is far enough from existing objects\n      if (canPlaceObject(newModel.position)) {\n        // Set the scale of the new model\n        let scaleFactor = modelScaleFactor[itemSelectedIndex];\n        newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n\n        // Add the new model to the scene\n        scene.add(newModel);\n\n        // Store the new model in the placed objects stack\n        placedObjects.push(newModel);\n\n        // Keep reference to the last placed object\n        lastPlacedObject = newModel;\n      } else {\n        console.log(\"Object is too close to another object.\");\n      }\n    }\n  }\n\n  function canPlaceObject(position) {\n    for (let i = 0; i < placedObjects.length; i++) {\n      const distance = placedObjects[i].position.distanceTo(position);\n      if (distance < MIN_DISTANCE_BETWEEN_OBJECTS) {\n        return false; // Too close to another object\n      }\n    }\n    return true;\n  }\n\n  // Set up the furniture selection\n  const onClicked = (e, selectItem, index) => {\n    itemSelectedIndex = index;\n\n    // Remove image selection from others to indicate unclicked\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.classList.remove(\"clicked\");\n    }\n\n    // Set image to selected\n    e.target.classList.add(\"clicked\");\n  };\n\n  function setupFurnitureSelection() {\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.addEventListener(\"beforexrselect\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClicked(e, items[i], i);\n      });\n    }\n  }\n\n  // Add rotation controls\n  function setupRotationControls() {\n    const rotateLeftButton = document.createElement(\"button\");\n    rotateLeftButton.innerText = \"Rotate Left\";\n    rotateLeftButton.className = \"rotate-left-button\";\n    rotateLeftButton.addEventListener(\"click\", () => rotateObject(-Math.PI / 8));\n    document.body.appendChild(rotateLeftButton);\n\n    const rotateRightButton = document.createElement(\"button\");\n    rotateRightButton.innerText = \"Rotate Right\";\n    rotateRightButton.className = \"rotate-right-button\";\n    rotateRightButton.addEventListener(\"click\", () => rotateObject(Math.PI / 8));\n    document.body.appendChild(rotateRightButton);\n  }\n\n  // Rotate the last placed object\n  function rotateObject(angle) {\n    if (lastPlacedObject) {\n      lastPlacedObject.rotation.y += angle; // Rotate along the Y-axis\n    }\n  }\n\n  // Set up remove button\n  function setupRemoveButton() {\n    const removeButton = document.createElement(\"button\");\n    removeButton.innerText = \"Remove\";\n    removeButton.className = \"remove-button\";\n    removeButton.addEventListener(\"click\", removeLastObject);\n    document.body.appendChild(removeButton);\n  }\n\n  // Remove the last placed object\n  function removeLastObject() {\n    if (lastPlacedObject) {\n      scene.remove(lastPlacedObject); // Remove the last placed object from the scene\n\n      // Remove the last object from the stack\n      placedObjects.pop();\n\n      // Update the last placed object to the previous one in the stack\n      lastPlacedObject = placedObjects.length > 0 ? placedObjects[placedObjects.length - 1] : null;\n    }\n  }\n\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session\n            .requestHitTestSource({ space: referenceSpace })\n            .then(function (source) {\n              hitTestSource = source;\n            });\n        });\n\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n\n        hitTestSourceRequested = true;\n      }\n\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n\n          const matrix = hit.getPose(referenceSpace).transform.matrix;\n          const normal = new THREE.Vector3(matrix[4], matrix[5], matrix[6]);\n\n          const angleFromUp = normal.angleTo(new THREE.Vector3(0, 1, 0));\n\n          const verticalThreshold = THREE.MathUtils.degToRad(20);\n\n          if (angleFromUp < verticalThreshold) {\n            reticle.visible = true;\n            reticle.matrix.fromArray(matrix);\n          } else {\n            reticle.visible = false;\n          }\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n\n    renderer.render(scene, camera);\n  }\n\n  return <div className=\"App\"></div>;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}