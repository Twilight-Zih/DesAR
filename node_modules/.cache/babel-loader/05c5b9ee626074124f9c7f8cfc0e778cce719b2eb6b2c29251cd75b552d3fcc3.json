{"ast":null,"code":"var _s = $RefreshSig$();\nimport \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { useEffect, useState, useRef } from \"react\";\nfunction App() {\n  _s();\n  const [selectedObject, setSelectedObject] = useState(null);\n  const [placedObjects, setPlacedObjects] = useState([]);\n  const [showWarning, setShowWarning] = useState(false);\n  const [selectedPlacedObject, setSelectedPlacedObject] = useState(null);\n  const rotateIntervalRef = useRef(null);\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const reticleRef = useRef(null);\n  const controllerRef = useRef(null);\n  const itemsRef = useRef([]);\n  const hitTestSourceRef = useRef(null);\n  const hitTestSourceRequestedRef = useRef(false);\n  useEffect(() => {\n    init();\n    setupFurnitureSelection();\n    animate();\n\n    // Cleanup on unmount\n    return () => {\n      if (rotateIntervalRef.current) {\n        clearInterval(rotateIntervalRef.current);\n      }\n      if (rendererRef.current) {\n        rendererRef.current.dispose();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Initialize Three.js scene, camera, renderer, ARButton, models, reticle\n  function init() {\n    const myCanvas = document.getElementById(\"canvas\");\n    sceneRef.current = new THREE.Scene();\n    cameraRef.current = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 20);\n    rendererRef.current = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true\n    });\n    rendererRef.current.setPixelRatio(window.devicePixelRatio);\n    rendererRef.current.setSize(window.innerWidth, window.innerHeight);\n    rendererRef.current.xr.enabled = true;\n\n    // Hemisphere Light\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    sceneRef.current.add(light);\n\n    // AR Button\n    const arButton = ARButton.createButton(rendererRef.current, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: {\n        root: document.body\n      }\n    });\n    document.body.appendChild(arButton);\n\n    // Load Models\n    loadModels();\n\n    // Setup Controller\n    controllerRef.current = rendererRef.current.xr.getController(0);\n    controllerRef.current.addEventListener(\"select\", onSelect);\n    sceneRef.current.add(controllerRef.current);\n\n    // Setup Reticle\n    reticleRef.current = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial({\n      color: 0x007bff\n    }));\n    reticleRef.current.matrixAutoUpdate = false;\n    reticleRef.current.visible = false;\n    sceneRef.current.add(reticleRef.current);\n\n    // Handle window resize\n    window.addEventListener(\"resize\", onWindowResize, false);\n\n    // Handle object taps\n    rendererRef.current.domElement.addEventListener(\"touchstart\", onTouchStart, false);\n  }\n\n  // Load GLTF models\n  function loadModels() {\n    const modelPaths = [\"./dylan_armchair_yolk_yellow.glb\", \"./ivan_armchair_mineral_blue.glb\", \"./marble_coffee_table.glb\", \"./flippa_functional_coffee_table_w._storagewalnut.glb\", \"./frame_armchairpetrol_velvet_with_gold_frame.glb\", \"./elnaz_nesting_side_tables_brass__green_marble.glb\"];\n    const loader = new GLTFLoader();\n    modelPaths.forEach((path, index) => {\n      loader.load(path, glb => {\n        const model = glb.scene;\n        model.traverse(child => {\n          if (child.isMesh) {\n            child.castShadow = true;\n          }\n        });\n        itemsRef.current[index] = model;\n      }, undefined, error => {\n        console.error(`Error loading model ${path}:`, error);\n      });\n    });\n  }\n\n  // Setup furniture selection from navbar\n  function setupFurnitureSelection() {\n    const buttons = document.querySelectorAll(\".button-image\");\n    buttons.forEach((button, index) => {\n      button.addEventListener(\"click\", () => {\n        setSelectedObject(index);\n        buttons.forEach(btn => btn.classList.remove(\"selected\"));\n        button.classList.add(\"selected\");\n      });\n    });\n  }\n\n  // Handle window resize\n  function onWindowResize() {\n    const myCanvas = document.getElementById(\"canvas\");\n    cameraRef.current.aspect = window.innerWidth / window.innerHeight;\n    cameraRef.current.updateProjectionMatrix();\n    rendererRef.current.setSize(window.innerWidth, window.innerHeight);\n  }\n\n  // Place object when \"Place\" button is pressed\n  function onSelect() {\n    if (reticleRef.current.visible && selectedObject !== null) {\n      const model = itemsRef.current[selectedObject].clone();\n      model.position.copy(reticleRef.current.position);\n      model.rotation.copy(reticleRef.current.rotation);\n\n      // Ensure placement on floor (Y=0)\n      model.position.y = 0;\n\n      // Check for overlap\n      if (detectOverlap(model)) {\n        showTemporaryWarning();\n        return;\n      }\n\n      // Add to scene and state\n      sceneRef.current.add(model);\n      setPlacedObjects(prev => [...prev, model]);\n\n      // Add event listeners for interaction\n      model.userData = {\n        doubleTap: false\n      };\n    }\n  }\n\n  // Detect if the new model overlaps with existing ones\n  function detectOverlap(newModel) {\n    const threshold = 1; // Adjust as needed\n    for (let obj of placedObjects) {\n      const distance = obj.position.distanceTo(newModel.position);\n      if (distance < threshold) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Show warning message temporarily\n  function showTemporaryWarning() {\n    const warning = document.querySelector(\".warning\");\n    warning.style.display = \"block\";\n    setTimeout(() => {\n      warning.style.display = \"none\";\n    }, 2000); // Display for 2 seconds\n  }\n\n  // Handle touch start for object selection and double-tap\n  function onTouchStart(event) {\n    event.preventDefault();\n    const touch = event.touches[0];\n    const x = touch.clientX;\n    const y = touch.clientY;\n\n    // Raycast to detect tapped objects\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2(x / window.innerWidth * 2 - 1, -(y / window.innerHeight) * 2 + 1);\n    raycaster.setFromCamera(mouse, cameraRef.current);\n    const intersects = raycaster.intersectObjects(placedObjects, true);\n    if (intersects.length > 0) {\n      const tappedObject = intersects[0].object.parent; // Get the parent model\n\n      if (tappedObject.userData.doubleTap) {\n        // Double-tap detected, remove object\n        removeObject(tappedObject);\n      } else {\n        // Single tap, select object\n        tappedObject.userData.doubleTap = true;\n        setTimeout(() => {\n          if (tappedObject.userData.doubleTap) {\n            // Single tap confirmed\n            selectObject(tappedObject);\n          }\n          tappedObject.userData.doubleTap = false;\n        }, 300); // 300ms timeout for double-tap\n      }\n    } else {\n      // Tapped on empty space, deselect any selected object\n      deselectObject();\n    }\n  }\n\n  // Select a placed object and show rotation buttons\n  function selectObject(object) {\n    setSelectedPlacedObject(object);\n    showRotateButtons();\n  }\n\n  // Deselect object and hide rotation buttons\n  function deselectObject() {\n    setSelectedPlacedObject(null);\n    hideRotateButtons();\n  }\n\n  // Remove object from scene and state\n  function removeObject(object) {\n    sceneRef.current.remove(object);\n    setPlacedObjects(prev => prev.filter(obj => obj !== object));\n    deselectObject();\n  }\n\n  // Show rotation buttons\n  function showRotateButtons() {\n    const rotateLeft = document.querySelector(\".rotate-left\");\n    const rotateRight = document.querySelector(\".rotate-right\");\n    rotateLeft.style.display = \"block\";\n    rotateRight.style.display = \"block\";\n  }\n\n  // Hide rotation buttons\n  function hideRotateButtons() {\n    const rotateLeft = document.querySelector(\".rotate-left\");\n    const rotateRight = document.querySelector(\".rotate-right\");\n    rotateLeft.style.display = \"none\";\n    rotateRight.style.display = \"none\";\n  }\n\n  // Handle rotation button press\n  function handleRotate(direction) {\n    if (!selectedPlacedObject) return;\n    const rotateFunction = direction === \"left\" ? () => selectedPlacedObject.rotation.y -= 0.02 : () => selectedPlacedObject.rotation.y += 0.02;\n    rotateIntervalRef.current = setInterval(rotateFunction, 16); // Approximately 60fps\n  }\n\n  // Stop rotation when button is released\n  function stopRotate() {\n    if (rotateIntervalRef.current) {\n      clearInterval(rotateIntervalRef.current);\n      rotateIntervalRef.current = null;\n    }\n  }\n\n  // Show warning and prevent object placement\n  function showOverlapWarning() {\n    setShowWarning(true);\n    setTimeout(() => {\n      setShowWarning(false);\n    }, 2000); // Hide after 2 seconds\n  }\n\n  // Animate loop\n  function animate() {\n    rendererRef.current.setAnimationLoop(render);\n  }\n\n  // Render function\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = rendererRef.current.xr.getReferenceSpace();\n      const session = rendererRef.current.xr.getSession();\n      if (!hitTestSourceRequestedRef.current) {\n        session.requestReferenceSpace(\"viewer\").then(referenceSpace => {\n          session.requestHitTestSource({\n            space: referenceSpace\n          }).then(source => {\n            hitTestSourceRef.current = source;\n          });\n        }).catch(error => {\n          console.error(\"Error requesting hit test source:\", error);\n        });\n        session.addEventListener(\"end\", () => {\n          hitTestSourceRequestedRef.current = false;\n          hitTestSourceRef.current = null;\n        });\n        hitTestSourceRequestedRef.current = true;\n      }\n      if (hitTestSourceRef.current) {\n        const hitTestResults = frame.getHitTestResults(hitTestSourceRef.current);\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          const hitMatrix = new THREE.Matrix4().fromArray(hit.getPose(referenceSpace).transform.matrix);\n          reticleRef.current.visible = true;\n          reticleRef.current.matrix.copy(hitMatrix);\n\n          // Ensure the reticle is placed on the floor by checking the normal\n          const normal = new THREE.Vector3(0, 1, 0); // Assuming floor normal\n          const up = new THREE.Vector3(0, 1, 0);\n          const quaternion = new THREE.Quaternion().setFromRotationMatrix(reticleRef.current.matrix);\n          const rotatedNormal = normal.clone().applyQuaternion(quaternion);\n          const angle = rotatedNormal.angleTo(up);\n          if (angle > Math.PI / 4) {\n            // If the surface is not sufficiently horizontal, hide the reticle\n            reticleRef.current.visible = false;\n          }\n        } else {\n          reticleRef.current.visible = false;\n        }\n      }\n    }\n    rendererRef.current.render(sceneRef.current, cameraRef.current);\n  }\n  return null; // Since all UI elements are in index.html\n}\n_s(App, \"7eiKJFtmPyqXKj/UuE9+5kArcQ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["THREE","ARButton","GLTFLoader","useEffect","useState","useRef","App","_s","selectedObject","setSelectedObject","placedObjects","setPlacedObjects","showWarning","setShowWarning","selectedPlacedObject","setSelectedPlacedObject","rotateIntervalRef","sceneRef","cameraRef","rendererRef","reticleRef","controllerRef","itemsRef","hitTestSourceRef","hitTestSourceRequestedRef","init","setupFurnitureSelection","animate","current","clearInterval","dispose","myCanvas","document","getElementById","Scene","PerspectiveCamera","window","innerWidth","innerHeight","WebGLRenderer","canvas","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","xr","enabled","light","HemisphereLight","position","set","add","arButton","createButton","requiredFeatures","optionalFeatures","domOverlay","root","body","appendChild","loadModels","getController","addEventListener","onSelect","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","color","matrixAutoUpdate","visible","onWindowResize","domElement","onTouchStart","modelPaths","loader","forEach","path","index","load","glb","model","scene","traverse","child","isMesh","castShadow","undefined","error","console","buttons","querySelectorAll","button","btn","classList","remove","aspect","updateProjectionMatrix","clone","copy","rotation","y","detectOverlap","showTemporaryWarning","prev","userData","doubleTap","newModel","threshold","obj","distance","distanceTo","warning","querySelector","style","display","setTimeout","event","preventDefault","touch","touches","x","clientX","clientY","raycaster","Raycaster","mouse","Vector2","setFromCamera","intersects","intersectObjects","length","tappedObject","object","parent","removeObject","selectObject","deselectObject","showRotateButtons","hideRotateButtons","filter","rotateLeft","rotateRight","handleRotate","direction","rotateFunction","setInterval","stopRotate","showOverlapWarning","setAnimationLoop","render","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","catch","hitTestResults","getHitTestResults","hit","hitMatrix","Matrix4","fromArray","getPose","transform","matrix","normal","Vector3","up","quaternion","Quaternion","setFromRotationMatrix","rotatedNormal","applyQuaternion","angle","angleTo","_c","$RefreshReg$"],"sources":["C:/Users/ZIHAB/OneDrive/Desktop/Final Year Mesh&Zih/DesAR/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { useEffect, useState, useRef } from \"react\";\n\nfunction App() {\n  const [selectedObject, setSelectedObject] = useState(null);\n  const [placedObjects, setPlacedObjects] = useState([]);\n  const [showWarning, setShowWarning] = useState(false);\n  const [selectedPlacedObject, setSelectedPlacedObject] = useState(null);\n  const rotateIntervalRef = useRef(null);\n\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const reticleRef = useRef(null);\n  const controllerRef = useRef(null);\n  const itemsRef = useRef([]);\n  const hitTestSourceRef = useRef(null);\n  const hitTestSourceRequestedRef = useRef(false);\n\n  useEffect(() => {\n    init();\n    setupFurnitureSelection();\n    animate();\n\n    // Cleanup on unmount\n    return () => {\n      if (rotateIntervalRef.current) {\n        clearInterval(rotateIntervalRef.current);\n      }\n      if (rendererRef.current) {\n        rendererRef.current.dispose();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Initialize Three.js scene, camera, renderer, ARButton, models, reticle\n  function init() {\n    const myCanvas = document.getElementById(\"canvas\");\n    sceneRef.current = new THREE.Scene();\n    cameraRef.current = new THREE.PerspectiveCamera(\n      70,\n      window.innerWidth / window.innerHeight,\n      0.01,\n      20\n    );\n\n    rendererRef.current = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true,\n    });\n    rendererRef.current.setPixelRatio(window.devicePixelRatio);\n    rendererRef.current.setSize(window.innerWidth, window.innerHeight);\n    rendererRef.current.xr.enabled = true;\n\n    // Hemisphere Light\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    sceneRef.current.add(light);\n\n    // AR Button\n    const arButton = ARButton.createButton(rendererRef.current, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: { root: document.body },\n    });\n    document.body.appendChild(arButton);\n\n    // Load Models\n    loadModels();\n\n    // Setup Controller\n    controllerRef.current = rendererRef.current.xr.getController(0);\n    controllerRef.current.addEventListener(\"select\", onSelect);\n    sceneRef.current.add(controllerRef.current);\n\n    // Setup Reticle\n    reticleRef.current = new THREE.Mesh(\n      new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2),\n      new THREE.MeshBasicMaterial({ color: 0x007bff })\n    );\n    reticleRef.current.matrixAutoUpdate = false;\n    reticleRef.current.visible = false;\n    sceneRef.current.add(reticleRef.current);\n\n    // Handle window resize\n    window.addEventListener(\"resize\", onWindowResize, false);\n\n    // Handle object taps\n    rendererRef.current.domElement.addEventListener(\"touchstart\", onTouchStart, false);\n  }\n\n  // Load GLTF models\n  function loadModels() {\n    const modelPaths = [\n      \"./dylan_armchair_yolk_yellow.glb\",\n      \"./ivan_armchair_mineral_blue.glb\",\n      \"./marble_coffee_table.glb\",\n      \"./flippa_functional_coffee_table_w._storagewalnut.glb\",\n      \"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\n      \"./elnaz_nesting_side_tables_brass__green_marble.glb\",\n    ];\n    const loader = new GLTFLoader();\n\n    modelPaths.forEach((path, index) => {\n      loader.load(\n        path,\n        (glb) => {\n          const model = glb.scene;\n          model.traverse((child) => {\n            if (child.isMesh) {\n              child.castShadow = true;\n            }\n          });\n          itemsRef.current[index] = model;\n        },\n        undefined,\n        (error) => {\n          console.error(`Error loading model ${path}:`, error);\n        }\n      );\n    });\n  }\n\n  // Setup furniture selection from navbar\n  function setupFurnitureSelection() {\n    const buttons = document.querySelectorAll(\".button-image\");\n    buttons.forEach((button, index) => {\n      button.addEventListener(\"click\", () => {\n        setSelectedObject(index);\n        buttons.forEach((btn) => btn.classList.remove(\"selected\"));\n        button.classList.add(\"selected\");\n      });\n    });\n  }\n\n  // Handle window resize\n  function onWindowResize() {\n    const myCanvas = document.getElementById(\"canvas\");\n    cameraRef.current.aspect = window.innerWidth / window.innerHeight;\n    cameraRef.current.updateProjectionMatrix();\n    rendererRef.current.setSize(window.innerWidth, window.innerHeight);\n  }\n\n  // Place object when \"Place\" button is pressed\n  function onSelect() {\n    if (reticleRef.current.visible && selectedObject !== null) {\n      const model = itemsRef.current[selectedObject].clone();\n      model.position.copy(reticleRef.current.position);\n      model.rotation.copy(reticleRef.current.rotation);\n\n      // Ensure placement on floor (Y=0)\n      model.position.y = 0;\n\n      // Check for overlap\n      if (detectOverlap(model)) {\n        showTemporaryWarning();\n        return;\n      }\n\n      // Add to scene and state\n      sceneRef.current.add(model);\n      setPlacedObjects((prev) => [...prev, model]);\n\n      // Add event listeners for interaction\n      model.userData = { doubleTap: false };\n    }\n  }\n\n  // Detect if the new model overlaps with existing ones\n  function detectOverlap(newModel) {\n    const threshold = 1; // Adjust as needed\n    for (let obj of placedObjects) {\n      const distance = obj.position.distanceTo(newModel.position);\n      if (distance < threshold) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Show warning message temporarily\n  function showTemporaryWarning() {\n    const warning = document.querySelector(\".warning\");\n    warning.style.display = \"block\";\n    setTimeout(() => {\n      warning.style.display = \"none\";\n    }, 2000); // Display for 2 seconds\n  }\n\n  // Handle touch start for object selection and double-tap\n  function onTouchStart(event) {\n    event.preventDefault();\n    const touch = event.touches[0];\n    const x = touch.clientX;\n    const y = touch.clientY;\n\n    // Raycast to detect tapped objects\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2(\n      (x / window.innerWidth) * 2 - 1,\n      -(y / window.innerHeight) * 2 + 1\n    );\n    raycaster.setFromCamera(mouse, cameraRef.current);\n    const intersects = raycaster.intersectObjects(placedObjects, true);\n\n    if (intersects.length > 0) {\n      const tappedObject = intersects[0].object.parent; // Get the parent model\n\n      if (tappedObject.userData.doubleTap) {\n        // Double-tap detected, remove object\n        removeObject(tappedObject);\n      } else {\n        // Single tap, select object\n        tappedObject.userData.doubleTap = true;\n        setTimeout(() => {\n          if (tappedObject.userData.doubleTap) {\n            // Single tap confirmed\n            selectObject(tappedObject);\n          }\n          tappedObject.userData.doubleTap = false;\n        }, 300); // 300ms timeout for double-tap\n      }\n    } else {\n      // Tapped on empty space, deselect any selected object\n      deselectObject();\n    }\n  }\n\n  // Select a placed object and show rotation buttons\n  function selectObject(object) {\n    setSelectedPlacedObject(object);\n    showRotateButtons();\n  }\n\n  // Deselect object and hide rotation buttons\n  function deselectObject() {\n    setSelectedPlacedObject(null);\n    hideRotateButtons();\n  }\n\n  // Remove object from scene and state\n  function removeObject(object) {\n    sceneRef.current.remove(object);\n    setPlacedObjects((prev) => prev.filter((obj) => obj !== object));\n    deselectObject();\n  }\n\n  // Show rotation buttons\n  function showRotateButtons() {\n    const rotateLeft = document.querySelector(\".rotate-left\");\n    const rotateRight = document.querySelector(\".rotate-right\");\n    rotateLeft.style.display = \"block\";\n    rotateRight.style.display = \"block\";\n  }\n\n  // Hide rotation buttons\n  function hideRotateButtons() {\n    const rotateLeft = document.querySelector(\".rotate-left\");\n    const rotateRight = document.querySelector(\".rotate-right\");\n    rotateLeft.style.display = \"none\";\n    rotateRight.style.display = \"none\";\n  }\n\n  // Handle rotation button press\n  function handleRotate(direction) {\n    if (!selectedPlacedObject) return;\n\n    const rotateFunction =\n      direction === \"left\" ? () => (selectedPlacedObject.rotation.y -= 0.02) : () => (selectedPlacedObject.rotation.y += 0.02);\n\n    rotateIntervalRef.current = setInterval(rotateFunction, 16); // Approximately 60fps\n  }\n\n  // Stop rotation when button is released\n  function stopRotate() {\n    if (rotateIntervalRef.current) {\n      clearInterval(rotateIntervalRef.current);\n      rotateIntervalRef.current = null;\n    }\n  }\n\n  // Show warning and prevent object placement\n  function showOverlapWarning() {\n    setShowWarning(true);\n    setTimeout(() => {\n      setShowWarning(false);\n    }, 2000); // Hide after 2 seconds\n  }\n\n  // Animate loop\n  function animate() {\n    rendererRef.current.setAnimationLoop(render);\n  }\n\n  // Render function\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = rendererRef.current.xr.getReferenceSpace();\n      const session = rendererRef.current.xr.getSession();\n\n      if (!hitTestSourceRequestedRef.current) {\n        session\n          .requestReferenceSpace(\"viewer\")\n          .then((referenceSpace) => {\n            session\n              .requestHitTestSource({ space: referenceSpace })\n              .then((source) => {\n                hitTestSourceRef.current = source;\n              });\n          })\n          .catch((error) => {\n            console.error(\"Error requesting hit test source:\", error);\n          });\n\n        session.addEventListener(\"end\", () => {\n          hitTestSourceRequestedRef.current = false;\n          hitTestSourceRef.current = null;\n        });\n\n        hitTestSourceRequestedRef.current = true;\n      }\n\n      if (hitTestSourceRef.current) {\n        const hitTestResults = frame.getHitTestResults(hitTestSourceRef.current);\n\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          const hitMatrix = new THREE.Matrix4().fromArray(hit.getPose(referenceSpace).transform.matrix);\n\n          reticleRef.current.visible = true;\n          reticleRef.current.matrix.copy(hitMatrix);\n\n          // Ensure the reticle is placed on the floor by checking the normal\n          const normal = new THREE.Vector3(0, 1, 0); // Assuming floor normal\n          const up = new THREE.Vector3(0, 1, 0);\n          const quaternion = new THREE.Quaternion().setFromRotationMatrix(reticleRef.current.matrix);\n          const rotatedNormal = normal.clone().applyQuaternion(quaternion);\n\n          const angle = rotatedNormal.angleTo(up);\n          if (angle > Math.PI / 4) {\n            // If the surface is not sufficiently horizontal, hide the reticle\n            reticleRef.current.visible = false;\n          }\n        } else {\n          reticleRef.current.visible = false;\n        }\n      }\n    }\n\n    rendererRef.current.render(sceneRef.current, cameraRef.current);\n  }\n\n  return null; // Since all UI elements are in index.html\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}