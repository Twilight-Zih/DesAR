{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZIHAB\\\\OneDrive\\\\Desktop\\\\Final Year Mesh&Zih\\\\DesAR\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n  let scene, camera, renderer;\n  let models = [\"./dylan_armchair_yolk_yellow.glb\", \"./ivan_armchair_mineral_blue.glb\", \"./marble_coffee_table.glb\", \"./flippa_functional_coffee_table_w._storagewalnut.glb\", \"./frame_armchairpetrol_velvet_with_gold_frame.glb\", \"./elnaz_nesting_side_tables_brass__green_marble.glb\"];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01];\n  let items = [];\n  let itemSelectedIndex = 0;\n  let controller;\n  let lastPlacedObject = null; // Store the last placed object\n\n  // Array to store positions of placed objects\n  let placedObjects = [];\n  const MIN_DISTANCE_BETWEEN_OBJECTS = 1; // Minimum distance between placed objects\n\n  init();\n  setupFurnitureSelection();\n  setupRotationControls(); // Set up rotation buttons\n  animate();\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(70, myCanvas.innerWidth / myCanvas.innerHeight, 0.01, 20);\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n\n    // AR Button\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: {\n        root: document.body\n      }\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    // Load Models\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        items[i] = model;\n      });\n    }\n    controller = renderer.xr.getController(0);\n    scene.add(controller);\n\n    // Reticle\n    reticle = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial());\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    // Add Place Button\n    const placeButton = document.createElement(\"button\");\n    placeButton.innerText = \"Place\";\n    placeButton.className = \"place-button\";\n    placeButton.style.position = \"absolute\";\n    placeButton.style.bottom = \"230px\";\n    placeButton.style.left = \"50%\";\n    placeButton.style.transform = \"translateX(-50%)\";\n    placeButton.addEventListener(\"click\", onPlaceButtonClicked);\n    document.body.appendChild(placeButton);\n  }\n  function onPlaceButtonClicked() {\n    if (reticle.visible) {\n      const newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n\n      // Decompose reticle's position and apply to new model\n      reticle.matrix.decompose(newModel.position, newModel.quaternion, newModel.scale);\n\n      // Check if the object is far enough from existing objects\n      if (canPlaceObject(newModel.position)) {\n        // Set the scale of the new model\n        let scaleFactor = modelScaleFactor[itemSelectedIndex];\n        newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n\n        // Add the new model to the scene\n        scene.add(newModel);\n\n        // Store the position of the newly placed object\n        placedObjects.push(newModel.position.clone());\n\n        // Keep reference to the last placed object\n        lastPlacedObject = newModel;\n      } else {\n        console.log(\"Object is too close to another object.\");\n      }\n    }\n  }\n  function canPlaceObject(position) {\n    for (let i = 0; i < placedObjects.length; i++) {\n      const distance = placedObjects[i].distanceTo(position);\n      if (distance < MIN_DISTANCE_BETWEEN_OBJECTS) {\n        return false; // Too close to another object\n      }\n    }\n\n    return true;\n  }\n\n  // Set up the furniture selection\n  const onClicked = (e, selectItem, index) => {\n    itemSelectedIndex = index;\n\n    // Remove image selection from others to indicate unclicked\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.classList.remove(\"clicked\");\n    }\n\n    // Set image to selected\n    e.target.classList.add(\"clicked\");\n  };\n  function setupFurnitureSelection() {\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.addEventListener(\"beforexrselect\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClicked(e, items[i], i);\n      });\n    }\n  }\n\n  // Add rotation controls\n  function setupRotationControls() {\n    const rotateLeftButton = document.createElement(\"button\");\n    rotateLeftButton.innerText = \"Rotate Left\";\n    rotateLeftButton.className = \"rotate-left-button\";\n    rotateLeftButton.style.position = \"absolute\";\n    rotateLeftButton.style.bottom = \"280px\";\n    rotateLeftButton.style.left = \"20px\";\n    rotateLeftButton.addEventListener(\"click\", () => rotateObject(-Math.PI / 8));\n    document.body.appendChild(rotateLeftButton);\n    const rotateRightButton = document.createElement(\"button\");\n    rotateRightButton.innerText = \"Rotate Right\";\n    rotateRightButton.className = \"rotate-right-button\";\n    rotateRightButton.style.position = \"absolute\";\n    rotateRightButton.style.bottom = \"280px\";\n    rotateRightButton.style.right = \"20px\";\n    rotateRightButton.addEventListener(\"click\", () => rotateObject(Math.PI / 8));\n    document.body.appendChild(rotateRightButton);\n  }\n\n  // Rotate the last placed object\n  function rotateObject(angle) {\n    if (lastPlacedObject) {\n      lastPlacedObject.rotation.y += angle; // Rotate along the Y-axis\n    }\n  }\n\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session.requestHitTestSource({\n            space: referenceSpace\n          }).then(function (source) {\n            hitTestSource = source;\n          });\n        });\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n        hitTestSourceRequested = true;\n      }\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          const matrix = hit.getPose(referenceSpace).transform.matrix;\n          const normal = new THREE.Vector3(matrix[4], matrix[5], matrix[6]);\n          const angleFromUp = normal.angleTo(new THREE.Vector3(0, 1, 0));\n          const verticalThreshold = THREE.MathUtils.degToRad(20);\n          if (angleFromUp < verticalThreshold) {\n            reticle.visible = true;\n            reticle.matrix.fromArray(matrix);\n          } else {\n            reticle.visible = false;\n          }\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n    renderer.render(scene, camera);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","reticle","hitTestSource","hitTestSourceRequested","scene","camera","renderer","models","modelScaleFactor","items","itemSelectedIndex","controller","lastPlacedObject","placedObjects","MIN_DISTANCE_BETWEEN_OBJECTS","init","setupFurnitureSelection","setupRotationControls","animate","myCanvas","document","getElementById","THREE","Scene","PerspectiveCamera","innerWidth","innerHeight","light","HemisphereLight","position","set","add","WebGLRenderer","canvas","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","xr","enabled","arButton","ARButton","createButton","requiredFeatures","optionalFeatures","domOverlay","root","body","style","bottom","appendChild","i","length","loader","GLTFLoader","load","glb","model","getController","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","matrixAutoUpdate","visible","placeButton","createElement","innerText","className","left","transform","addEventListener","onPlaceButtonClicked","newModel","clone","matrix","decompose","quaternion","scale","canPlaceObject","scaleFactor","push","console","log","distance","distanceTo","onClicked","e","selectItem","index","el","querySelector","classList","remove","target","preventDefault","stopPropagation","rotateLeftButton","rotateObject","rotateRightButton","right","angle","rotation","y","setAnimationLoop","render","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","hitTestResults","getHitTestResults","hit","getPose","normal","Vector3","angleFromUp","angleTo","verticalThreshold","MathUtils","degToRad","fromArray","_jsxDEV","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ZIHAB/OneDrive/Desktop/Final Year Mesh&Zih/DesAR/src/App.js"],"sourcesContent":["function App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n\n  let scene, camera, renderer;\n\n  let models = [\n    \"./dylan_armchair_yolk_yellow.glb\",\n    \"./ivan_armchair_mineral_blue.glb\",\n    \"./marble_coffee_table.glb\",\n    \"./flippa_functional_coffee_table_w._storagewalnut.glb\",\n    \"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\n    \"./elnaz_nesting_side_tables_brass__green_marble.glb\",\n  ];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01];\n  let items = [];\n  let itemSelectedIndex = 0;\n\n  let controller;\n  let lastPlacedObject = null; // Store the last placed object\n\n  // Array to store positions of placed objects\n  let placedObjects = [];\n  const MIN_DISTANCE_BETWEEN_OBJECTS = 1; // Minimum distance between placed objects\n\n  init();\n  setupFurnitureSelection();\n  setupRotationControls(); // Set up rotation buttons\n  animate();\n\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(\n      70,\n      myCanvas.innerWidth / myCanvas.innerHeight,\n      0.01,\n      20\n    );\n\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n\n    // AR Button\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: { root: document.body },\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    // Load Models\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        items[i] = model;\n      });\n    }\n\n    controller = renderer.xr.getController(0);\n    scene.add(controller);\n\n    // Reticle\n    reticle = new THREE.Mesh(\n      new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2),\n      new THREE.MeshBasicMaterial()\n    );\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    // Add Place Button\n    const placeButton = document.createElement(\"button\");\n    placeButton.innerText = \"Place\";\n    placeButton.className = \"place-button\";\n    placeButton.style.position = \"absolute\";\n    placeButton.style.bottom = \"230px\";\n    placeButton.style.left = \"50%\";\n    placeButton.style.transform = \"translateX(-50%)\";\n    placeButton.addEventListener(\"click\", onPlaceButtonClicked);\n    document.body.appendChild(placeButton);\n  }\n\n  function onPlaceButtonClicked() {\n    if (reticle.visible) {\n      const newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n\n      // Decompose reticle's position and apply to new model\n      reticle.matrix.decompose(\n        newModel.position,\n        newModel.quaternion,\n        newModel.scale\n      );\n\n      // Check if the object is far enough from existing objects\n      if (canPlaceObject(newModel.position)) {\n        // Set the scale of the new model\n        let scaleFactor = modelScaleFactor[itemSelectedIndex];\n        newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n\n        // Add the new model to the scene\n        scene.add(newModel);\n\n        // Store the position of the newly placed object\n        placedObjects.push(newModel.position.clone());\n\n        // Keep reference to the last placed object\n        lastPlacedObject = newModel;\n      } else {\n        console.log(\"Object is too close to another object.\");\n      }\n    }\n  }\n\n  function canPlaceObject(position) {\n    for (let i = 0; i < placedObjects.length; i++) {\n      const distance = placedObjects[i].distanceTo(position);\n      if (distance < MIN_DISTANCE_BETWEEN_OBJECTS) {\n        return false; // Too close to another object\n      }\n    }\n    return true;\n  }\n\n  // Set up the furniture selection\n  const onClicked = (e, selectItem, index) => {\n    itemSelectedIndex = index;\n\n    // Remove image selection from others to indicate unclicked\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.classList.remove(\"clicked\");\n    }\n\n    // Set image to selected\n    e.target.classList.add(\"clicked\");\n  };\n\n  function setupFurnitureSelection() {\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.addEventListener(\"beforexrselect\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClicked(e, items[i], i);\n      });\n    }\n  }\n\n  // Add rotation controls\n  function setupRotationControls() {\n    const rotateLeftButton = document.createElement(\"button\");\n    rotateLeftButton.innerText = \"Rotate Left\";\n    rotateLeftButton.className = \"rotate-left-button\";\n    rotateLeftButton.style.position = \"absolute\";\n    rotateLeftButton.style.bottom = \"280px\";\n    rotateLeftButton.style.left = \"20px\";\n    rotateLeftButton.addEventListener(\"click\", () => rotateObject(-Math.PI / 8));\n    document.body.appendChild(rotateLeftButton);\n\n    const rotateRightButton = document.createElement(\"button\");\n    rotateRightButton.innerText = \"Rotate Right\";\n    rotateRightButton.className = \"rotate-right-button\";\n    rotateRightButton.style.position = \"absolute\";\n    rotateRightButton.style.bottom = \"280px\";\n    rotateRightButton.style.right = \"20px\";\n    rotateRightButton.addEventListener(\"click\", () => rotateObject(Math.PI / 8));\n    document.body.appendChild(rotateRightButton);\n  }\n\n  // Rotate the last placed object\n  function rotateObject(angle) {\n    if (lastPlacedObject) {\n      lastPlacedObject.rotation.y += angle; // Rotate along the Y-axis\n    }\n  }\n\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session\n            .requestHitTestSource({ space: referenceSpace })\n            .then(function (source) {\n              hitTestSource = source;\n            });\n        });\n\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n\n        hitTestSourceRequested = true;\n      }\n\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n\n          const matrix = hit.getPose(referenceSpace).transform.matrix;\n          const normal = new THREE.Vector3(matrix[4], matrix[5], matrix[6]);\n\n          const angleFromUp = normal.angleTo(new THREE.Vector3(0, 1, 0));\n\n          const verticalThreshold = THREE.MathUtils.degToRad(20);\n\n          if (angleFromUp < verticalThreshold) {\n            reticle.visible = true;\n            reticle.matrix.fromArray(matrix);\n          } else {\n            reticle.visible = false;\n          }\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n\n    renderer.render(scene, camera);\n  }\n\n  return <div className=\"App\"></div>;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}