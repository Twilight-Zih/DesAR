{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZIHAB\\\\OneDrive\\\\Desktop\\\\Final Year Mesh&Zih\\\\DesAR\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n  let scene, camera, renderer;\n  let models = [\"./dylan_armchair_yolk_yellow.glb\", \"./ivan_armchair_mineral_blue.glb\", \"./marble_coffee_table.glb\", \"./flippa_functional_coffee_table_w._storagewalnut.glb\", \"./frame_armchairpetrol_velvet_with_gold_frame.glb\", \"./elnaz_nesting_side_tables_brass__green_marble.glb\"];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01];\n  let items = [];\n  let itemSelectedIndex = 0;\n  let controller;\n  let selectedObject = null; // Track the currently selected object\n\n  let placedObjects = [];\n  const MIN_DISTANCE_BETWEEN_OBJECTS = 1; // Minimum distance between placed objects\n\n  init();\n  animate();\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(70, myCanvas.innerWidth / myCanvas.innerHeight, 0.01, 20);\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n\n    // AR Button\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: {\n        root: document.body\n      }\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    // Load Models\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        items[i] = model;\n      });\n    }\n    controller = renderer.xr.getController(0);\n    scene.add(controller);\n\n    // Reticle\n    reticle = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial());\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    // Add Place Button\n    const placeButton = document.createElement(\"button\");\n    placeButton.innerText = \"Place\";\n    placeButton.className = \"place-button\";\n    placeButton.style.position = \"absolute\";\n    placeButton.style.bottom = \"230px\";\n    placeButton.style.left = \"50%\";\n    placeButton.style.transform = \"translateX(-50%)\";\n    placeButton.addEventListener(\"click\", onPlaceButtonClicked);\n    document.body.appendChild(placeButton);\n\n    // Add rotation and delete controls (hidden by default)\n    setupControls();\n  }\n  function onPlaceButtonClicked() {\n    if (reticle.visible) {\n      const newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n      reticle.matrix.decompose(newModel.position, newModel.quaternion, newModel.scale);\n\n      // Check if the object is far enough from existing objects\n      if (canPlaceObject(newModel.position)) {\n        let scaleFactor = modelScaleFactor[itemSelectedIndex];\n        newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n\n        // Add the new model to the scene\n        scene.add(newModel);\n\n        // Store the position and reference of the newly placed object\n        placedObjects.push(newModel);\n\n        // Allow the object to be selectable\n        newModel.userData.isSelectable = true;\n\n        // Add event listener for selecting objects\n        newModel.addEventListener(\"click\", () => selectObject(newModel));\n      } else {\n        console.log(\"Object is too close to another object.\");\n      }\n    }\n  }\n  function canPlaceObject(position) {\n    for (let i = 0; i < placedObjects.length; i++) {\n      const distance = placedObjects[i].position.distanceTo(position);\n      if (distance < MIN_DISTANCE_BETWEEN_OBJECTS) {\n        return false; // Too close to another object\n      }\n    }\n\n    return true;\n  }\n  function selectObject(object) {\n    // Deselect the previous object\n    if (selectedObject) {\n      selectedObject.children[0].material.color.set(0xffffff); // Reset color\n    }\n\n    // Select the new object\n    selectedObject = object;\n    selectedObject.children[0].material.color.set(0xff0000); // Highlight color\n\n    // Show rotation and delete buttons\n    document.querySelector(\".rotate-controls\").style.display = \"block\";\n    document.querySelector(\".delete-button\").style.display = \"block\";\n  }\n  function setupControls() {\n    // Rotation controls\n    const rotateLeftButton = document.createElement(\"button\");\n    rotateLeftButton.innerText = \"Rotate Left\";\n    rotateLeftButton.className = \"rotate-left-button\";\n    rotateLeftButton.style.position = \"absolute\";\n    rotateLeftButton.style.bottom = \"280px\";\n    rotateLeftButton.style.left = \"20px\";\n    rotateLeftButton.style.display = \"none\";\n    rotateLeftButton.classList.add(\"rotate-controls\");\n    rotateLeftButton.addEventListener(\"click\", () => rotateObject(-Math.PI / 8));\n    document.body.appendChild(rotateLeftButton);\n    const rotateRightButton = document.createElement(\"button\");\n    rotateRightButton.innerText = \"Rotate Right\";\n    rotateRightButton.className = \"rotate-right-button\";\n    rotateRightButton.style.position = \"absolute\";\n    rotateRightButton.style.bottom = \"280px\";\n    rotateRightButton.style.right = \"20px\";\n    rotateRightButton.style.display = \"none\";\n    rotateRightButton.classList.add(\"rotate-controls\");\n    rotateRightButton.addEventListener(\"click\", () => rotateObject(Math.PI / 8));\n    document.body.appendChild(rotateRightButton);\n\n    // Delete control\n    const deleteButton = document.createElement(\"button\");\n    deleteButton.innerText = \"Delete\";\n    deleteButton.className = \"delete-button\";\n    deleteButton.style.position = \"absolute\";\n    deleteButton.style.bottom = \"330px\";\n    deleteButton.style.left = \"50%\";\n    deleteButton.style.transform = \"translateX(-50%)\";\n    deleteButton.style.display = \"none\";\n    deleteButton.addEventListener(\"click\", deleteSelectedObject);\n    document.body.appendChild(deleteButton);\n  }\n  function rotateObject(angle) {\n    if (selectedObject) {\n      selectedObject.rotation.y += angle;\n    }\n  }\n  function deleteSelectedObject() {\n    if (selectedObject) {\n      // Remove from scene\n      scene.remove(selectedObject);\n\n      // Remove from placedObjects array\n      placedObjects = placedObjects.filter(obj => obj !== selectedObject);\n\n      // Hide controls\n      document.querySelector(\".rotate-controls\").style.display = \"none\";\n      document.querySelector(\".delete-button\").style.display = \"none\";\n      selectedObject = null;\n    }\n  }\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session.requestHitTestSource({\n            space: referenceSpace\n          }).then(function (source) {\n            hitTestSource = source;\n          });\n        });\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n        hitTestSourceRequested = true;\n      }\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          const matrix = hit.getPose(referenceSpace).transform.matrix;\n          const normal = new THREE.Vector3(matrix[4], matrix[5], matrix[6]);\n          const angleFromUp = normal.angleTo(new THREE.Vector3(0, 1, 0));\n          const verticalThreshold = THREE.MathUtils.degToRad(20);\n          if (angleFromUp < verticalThreshold) {\n            reticle.visible = true;\n            reticle.matrix.fromArray(matrix);\n          } else {\n            reticle.visible = false;\n          }\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n    renderer.render(scene, camera);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["THREE","ARButton","GLTFLoader","jsxDEV","_jsxDEV","App","reticle","hitTestSource","hitTestSourceRequested","scene","camera","renderer","models","modelScaleFactor","items","itemSelectedIndex","controller","selectedObject","placedObjects","MIN_DISTANCE_BETWEEN_OBJECTS","init","animate","myCanvas","document","getElementById","Scene","PerspectiveCamera","innerWidth","innerHeight","light","HemisphereLight","position","set","add","WebGLRenderer","canvas","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","xr","enabled","arButton","createButton","requiredFeatures","optionalFeatures","domOverlay","root","body","style","bottom","appendChild","i","length","loader","load","glb","model","getController","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","matrixAutoUpdate","visible","placeButton","createElement","innerText","className","left","transform","addEventListener","onPlaceButtonClicked","setupControls","newModel","clone","matrix","decompose","quaternion","scale","canPlaceObject","scaleFactor","push","userData","isSelectable","selectObject","console","log","distance","distanceTo","object","children","material","color","querySelector","display","rotateLeftButton","classList","rotateObject","rotateRightButton","right","deleteButton","deleteSelectedObject","angle","rotation","y","remove","filter","obj","setAnimationLoop","render","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","hitTestResults","getHitTestResults","hit","getPose","normal","Vector3","angleFromUp","angleTo","verticalThreshold","MathUtils","degToRad","fromArray","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ZIHAB/OneDrive/Desktop/Final Year Mesh&Zih/DesAR/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n\n  let scene, camera, renderer;\n\n  let models = [\n    \"./dylan_armchair_yolk_yellow.glb\",\n    \"./ivan_armchair_mineral_blue.glb\",\n    \"./marble_coffee_table.glb\",\n    \"./flippa_functional_coffee_table_w._storagewalnut.glb\",\n    \"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\n    \"./elnaz_nesting_side_tables_brass__green_marble.glb\",\n  ];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01];\n  let items = [];\n  let itemSelectedIndex = 0;\n\n  let controller;\n  let selectedObject = null; // Track the currently selected object\n\n  let placedObjects = [];\n  const MIN_DISTANCE_BETWEEN_OBJECTS = 1; // Minimum distance between placed objects\n\n  init();\n  animate();\n\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(\n      70,\n      myCanvas.innerWidth / myCanvas.innerHeight,\n      0.01,\n      20\n    );\n\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n\n    // AR Button\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: { root: document.body },\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    // Load Models\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        items[i] = model;\n      });\n    }\n\n    controller = renderer.xr.getController(0);\n    scene.add(controller);\n\n    // Reticle\n    reticle = new THREE.Mesh(\n      new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2),\n      new THREE.MeshBasicMaterial()\n    );\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    // Add Place Button\n    const placeButton = document.createElement(\"button\");\n    placeButton.innerText = \"Place\";\n    placeButton.className = \"place-button\";\n    placeButton.style.position = \"absolute\";\n    placeButton.style.bottom = \"230px\";\n    placeButton.style.left = \"50%\";\n    placeButton.style.transform = \"translateX(-50%)\";\n    placeButton.addEventListener(\"click\", onPlaceButtonClicked);\n    document.body.appendChild(placeButton);\n\n    // Add rotation and delete controls (hidden by default)\n    setupControls();\n  }\n\n  function onPlaceButtonClicked() {\n    if (reticle.visible) {\n      const newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n\n      reticle.matrix.decompose(\n        newModel.position,\n        newModel.quaternion,\n        newModel.scale\n      );\n\n      // Check if the object is far enough from existing objects\n      if (canPlaceObject(newModel.position)) {\n        let scaleFactor = modelScaleFactor[itemSelectedIndex];\n        newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n\n        // Add the new model to the scene\n        scene.add(newModel);\n\n        // Store the position and reference of the newly placed object\n        placedObjects.push(newModel);\n\n        // Allow the object to be selectable\n        newModel.userData.isSelectable = true;\n\n        // Add event listener for selecting objects\n        newModel.addEventListener(\"click\", () => selectObject(newModel));\n      } else {\n        console.log(\"Object is too close to another object.\");\n      }\n    }\n  }\n\n  function canPlaceObject(position) {\n    for (let i = 0; i < placedObjects.length; i++) {\n      const distance = placedObjects[i].position.distanceTo(position);\n      if (distance < MIN_DISTANCE_BETWEEN_OBJECTS) {\n        return false; // Too close to another object\n      }\n    }\n    return true;\n  }\n\n  function selectObject(object) {\n    // Deselect the previous object\n    if (selectedObject) {\n      selectedObject.children[0].material.color.set(0xffffff); // Reset color\n    }\n\n    // Select the new object\n    selectedObject = object;\n    selectedObject.children[0].material.color.set(0xff0000); // Highlight color\n\n    // Show rotation and delete buttons\n    document.querySelector(\".rotate-controls\").style.display = \"block\";\n    document.querySelector(\".delete-button\").style.display = \"block\";\n  }\n\n  function setupControls() {\n    // Rotation controls\n    const rotateLeftButton = document.createElement(\"button\");\n    rotateLeftButton.innerText = \"Rotate Left\";\n    rotateLeftButton.className = \"rotate-left-button\";\n    rotateLeftButton.style.position = \"absolute\";\n    rotateLeftButton.style.bottom = \"280px\";\n    rotateLeftButton.style.left = \"20px\";\n    rotateLeftButton.style.display = \"none\";\n    rotateLeftButton.classList.add(\"rotate-controls\");\n    rotateLeftButton.addEventListener(\"click\", () => rotateObject(-Math.PI / 8));\n    document.body.appendChild(rotateLeftButton);\n\n    const rotateRightButton = document.createElement(\"button\");\n    rotateRightButton.innerText = \"Rotate Right\";\n    rotateRightButton.className = \"rotate-right-button\";\n    rotateRightButton.style.position = \"absolute\";\n    rotateRightButton.style.bottom = \"280px\";\n    rotateRightButton.style.right = \"20px\";\n    rotateRightButton.style.display = \"none\";\n    rotateRightButton.classList.add(\"rotate-controls\");\n    rotateRightButton.addEventListener(\"click\", () => rotateObject(Math.PI / 8));\n    document.body.appendChild(rotateRightButton);\n\n    // Delete control\n    const deleteButton = document.createElement(\"button\");\n    deleteButton.innerText = \"Delete\";\n    deleteButton.className = \"delete-button\";\n    deleteButton.style.position = \"absolute\";\n    deleteButton.style.bottom = \"330px\";\n    deleteButton.style.left = \"50%\";\n    deleteButton.style.transform = \"translateX(-50%)\";\n    deleteButton.style.display = \"none\";\n    deleteButton.addEventListener(\"click\", deleteSelectedObject);\n    document.body.appendChild(deleteButton);\n  }\n\n  function rotateObject(angle) {\n    if (selectedObject) {\n      selectedObject.rotation.y += angle;\n    }\n  }\n\n  function deleteSelectedObject() {\n    if (selectedObject) {\n      // Remove from scene\n      scene.remove(selectedObject);\n\n      // Remove from placedObjects array\n      placedObjects = placedObjects.filter((obj) => obj !== selectedObject);\n\n      // Hide controls\n      document.querySelector(\".rotate-controls\").style.display = \"none\";\n      document.querySelector(\".delete-button\").style.display = \"none\";\n\n      selectedObject = null;\n    }\n  }\n\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session\n            .requestHitTestSource({ space: referenceSpace })\n            .then(function (source) {\n              hitTestSource = source;\n            });\n        });\n\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n\n        hitTestSourceRequested = true;\n      }\n\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          const matrix = hit.getPose(referenceSpace).transform.matrix;\n          const normal = new THREE.Vector3(matrix[4], matrix[5], matrix[6]);\n          const angleFromUp = normal.angleTo(new THREE.Vector3(0, 1, 0));\n          const verticalThreshold = THREE.MathUtils.degToRad(20);\n\n          if (angleFromUp < verticalThreshold) {\n            reticle.visible = true;\n            reticle.matrix.fromArray(matrix);\n          } else {\n            reticle.visible = false;\n          }\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n\n    renderer.render(scene, camera);\n  }\n\n  return <div className=\"App\"></div>;\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,mCAAmC;AAC5D,SAASC,UAAU,QAAQ,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,SAASC,GAAGA,CAAA,EAAG;EACb,IAAIC,OAAO;EACX,IAAIC,aAAa,GAAG,IAAI;EACxB,IAAIC,sBAAsB,GAAG,KAAK;EAElC,IAAIC,KAAK,EAAEC,MAAM,EAAEC,QAAQ;EAE3B,IAAIC,MAAM,GAAG,CACX,kCAAkC,EAClC,kCAAkC,EAClC,2BAA2B,EAC3B,uDAAuD,EACvD,mDAAmD,EACnD,qDAAqD,CACtD;EACD,IAAIC,gBAAgB,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EAC5D,IAAIC,KAAK,GAAG,EAAE;EACd,IAAIC,iBAAiB,GAAG,CAAC;EAEzB,IAAIC,UAAU;EACd,IAAIC,cAAc,GAAG,IAAI,CAAC,CAAC;;EAE3B,IAAIC,aAAa,GAAG,EAAE;EACtB,MAAMC,4BAA4B,GAAG,CAAC,CAAC,CAAC;;EAExCC,IAAI,CAAC,CAAC;EACNC,OAAO,CAAC,CAAC;EAET,SAASD,IAAIA,CAAA,EAAG;IACd,IAAIE,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IAChDf,KAAK,GAAG,IAAIT,KAAK,CAACyB,KAAK,CAAC,CAAC;IACzBf,MAAM,GAAG,IAAIV,KAAK,CAAC0B,iBAAiB,CAClC,EAAE,EACFJ,QAAQ,CAACK,UAAU,GAAGL,QAAQ,CAACM,WAAW,EAC1C,IAAI,EACJ,EACF,CAAC;IAED,MAAMC,KAAK,GAAG,IAAI7B,KAAK,CAAC8B,eAAe,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;IAC9DD,KAAK,CAACE,QAAQ,CAACC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC;IAChCvB,KAAK,CAACwB,GAAG,CAACJ,KAAK,CAAC;IAEhBlB,QAAQ,GAAG,IAAIX,KAAK,CAACkC,aAAa,CAAC;MACjCC,MAAM,EAAEb,QAAQ;MAChBc,SAAS,EAAE,IAAI;MACfC,KAAK,EAAE;IACT,CAAC,CAAC;IACF1B,QAAQ,CAAC2B,aAAa,CAACC,MAAM,CAACC,gBAAgB,CAAC;IAC/C7B,QAAQ,CAAC8B,OAAO,CAACnB,QAAQ,CAACK,UAAU,EAAEL,QAAQ,CAACM,WAAW,CAAC;IAC3DjB,QAAQ,CAAC+B,EAAE,CAACC,OAAO,GAAG,IAAI;;IAE1B;IACA,IAAIC,QAAQ,GAAG3C,QAAQ,CAAC4C,YAAY,CAAClC,QAAQ,EAAE;MAC7CmC,gBAAgB,EAAE,CAAC,UAAU,CAAC;MAC9BC,gBAAgB,EAAE,CAAC,aAAa,EAAE,kBAAkB,CAAC;MACrDC,UAAU,EAAE;QAAEC,IAAI,EAAE1B,QAAQ,CAAC2B;MAAK;IACpC,CAAC,CAAC;IACFN,QAAQ,CAACO,KAAK,CAACC,MAAM,GAAG,KAAK;IAC7B7B,QAAQ,CAAC2B,IAAI,CAACG,WAAW,CAACT,QAAQ,CAAC;;IAEnC;IACA,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1C,MAAM,CAAC2C,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,MAAME,MAAM,GAAG,IAAItD,UAAU,CAAC,CAAC;MAC/BsD,MAAM,CAACC,IAAI,CAAC7C,MAAM,CAAC0C,CAAC,CAAC,EAAE,UAAUI,GAAG,EAAE;QACpC,IAAIC,KAAK,GAAGD,GAAG,CAACjD,KAAK;QACrBK,KAAK,CAACwC,CAAC,CAAC,GAAGK,KAAK;MAClB,CAAC,CAAC;IACJ;IAEA3C,UAAU,GAAGL,QAAQ,CAAC+B,EAAE,CAACkB,aAAa,CAAC,CAAC,CAAC;IACzCnD,KAAK,CAACwB,GAAG,CAACjB,UAAU,CAAC;;IAErB;IACAV,OAAO,GAAG,IAAIN,KAAK,CAAC6D,IAAI,CACtB,IAAI7D,KAAK,CAAC8D,YAAY,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,CAACC,OAAO,CAAC,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,EAC3D,IAAIjE,KAAK,CAACkE,iBAAiB,CAAC,CAC9B,CAAC;IACD5D,OAAO,CAAC6D,gBAAgB,GAAG,KAAK;IAChC7D,OAAO,CAAC8D,OAAO,GAAG,KAAK;IACvB3D,KAAK,CAACwB,GAAG,CAAC3B,OAAO,CAAC;;IAElB;IACA,MAAM+D,WAAW,GAAG9C,QAAQ,CAAC+C,aAAa,CAAC,QAAQ,CAAC;IACpDD,WAAW,CAACE,SAAS,GAAG,OAAO;IAC/BF,WAAW,CAACG,SAAS,GAAG,cAAc;IACtCH,WAAW,CAAClB,KAAK,CAACpB,QAAQ,GAAG,UAAU;IACvCsC,WAAW,CAAClB,KAAK,CAACC,MAAM,GAAG,OAAO;IAClCiB,WAAW,CAAClB,KAAK,CAACsB,IAAI,GAAG,KAAK;IAC9BJ,WAAW,CAAClB,KAAK,CAACuB,SAAS,GAAG,kBAAkB;IAChDL,WAAW,CAACM,gBAAgB,CAAC,OAAO,EAAEC,oBAAoB,CAAC;IAC3DrD,QAAQ,CAAC2B,IAAI,CAACG,WAAW,CAACgB,WAAW,CAAC;;IAEtC;IACAQ,aAAa,CAAC,CAAC;EACjB;EAEA,SAASD,oBAAoBA,CAAA,EAAG;IAC9B,IAAItE,OAAO,CAAC8D,OAAO,EAAE;MACnB,MAAMU,QAAQ,GAAGhE,KAAK,CAACC,iBAAiB,CAAC,CAACgE,KAAK,CAAC,CAAC;MACjDD,QAAQ,CAACV,OAAO,GAAG,IAAI;MAEvB9D,OAAO,CAAC0E,MAAM,CAACC,SAAS,CACtBH,QAAQ,CAAC/C,QAAQ,EACjB+C,QAAQ,CAACI,UAAU,EACnBJ,QAAQ,CAACK,KACX,CAAC;;MAED;MACA,IAAIC,cAAc,CAACN,QAAQ,CAAC/C,QAAQ,CAAC,EAAE;QACrC,IAAIsD,WAAW,GAAGxE,gBAAgB,CAACE,iBAAiB,CAAC;QACrD+D,QAAQ,CAACK,KAAK,CAACnD,GAAG,CAACqD,WAAW,EAAEA,WAAW,EAAEA,WAAW,CAAC;;QAEzD;QACA5E,KAAK,CAACwB,GAAG,CAAC6C,QAAQ,CAAC;;QAEnB;QACA5D,aAAa,CAACoE,IAAI,CAACR,QAAQ,CAAC;;QAE5B;QACAA,QAAQ,CAACS,QAAQ,CAACC,YAAY,GAAG,IAAI;;QAErC;QACAV,QAAQ,CAACH,gBAAgB,CAAC,OAAO,EAAE,MAAMc,YAAY,CAACX,QAAQ,CAAC,CAAC;MAClE,CAAC,MAAM;QACLY,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACvD;IACF;EACF;EAEA,SAASP,cAAcA,CAACrD,QAAQ,EAAE;IAChC,KAAK,IAAIuB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpC,aAAa,CAACqC,MAAM,EAAED,CAAC,EAAE,EAAE;MAC7C,MAAMsC,QAAQ,GAAG1E,aAAa,CAACoC,CAAC,CAAC,CAACvB,QAAQ,CAAC8D,UAAU,CAAC9D,QAAQ,CAAC;MAC/D,IAAI6D,QAAQ,GAAGzE,4BAA4B,EAAE;QAC3C,OAAO,KAAK,CAAC,CAAC;MAChB;IACF;;IACA,OAAO,IAAI;EACb;EAEA,SAASsE,YAAYA,CAACK,MAAM,EAAE;IAC5B;IACA,IAAI7E,cAAc,EAAE;MAClBA,cAAc,CAAC8E,QAAQ,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACC,KAAK,CAACjE,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC3D;;IAEA;IACAf,cAAc,GAAG6E,MAAM;IACvB7E,cAAc,CAAC8E,QAAQ,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACC,KAAK,CAACjE,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;;IAEzD;IACAT,QAAQ,CAAC2E,aAAa,CAAC,kBAAkB,CAAC,CAAC/C,KAAK,CAACgD,OAAO,GAAG,OAAO;IAClE5E,QAAQ,CAAC2E,aAAa,CAAC,gBAAgB,CAAC,CAAC/C,KAAK,CAACgD,OAAO,GAAG,OAAO;EAClE;EAEA,SAAStB,aAAaA,CAAA,EAAG;IACvB;IACA,MAAMuB,gBAAgB,GAAG7E,QAAQ,CAAC+C,aAAa,CAAC,QAAQ,CAAC;IACzD8B,gBAAgB,CAAC7B,SAAS,GAAG,aAAa;IAC1C6B,gBAAgB,CAAC5B,SAAS,GAAG,oBAAoB;IACjD4B,gBAAgB,CAACjD,KAAK,CAACpB,QAAQ,GAAG,UAAU;IAC5CqE,gBAAgB,CAACjD,KAAK,CAACC,MAAM,GAAG,OAAO;IACvCgD,gBAAgB,CAACjD,KAAK,CAACsB,IAAI,GAAG,MAAM;IACpC2B,gBAAgB,CAACjD,KAAK,CAACgD,OAAO,GAAG,MAAM;IACvCC,gBAAgB,CAACC,SAAS,CAACpE,GAAG,CAAC,iBAAiB,CAAC;IACjDmE,gBAAgB,CAACzB,gBAAgB,CAAC,OAAO,EAAE,MAAM2B,YAAY,CAAC,CAACtC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,CAAC;IAC5E1C,QAAQ,CAAC2B,IAAI,CAACG,WAAW,CAAC+C,gBAAgB,CAAC;IAE3C,MAAMG,iBAAiB,GAAGhF,QAAQ,CAAC+C,aAAa,CAAC,QAAQ,CAAC;IAC1DiC,iBAAiB,CAAChC,SAAS,GAAG,cAAc;IAC5CgC,iBAAiB,CAAC/B,SAAS,GAAG,qBAAqB;IACnD+B,iBAAiB,CAACpD,KAAK,CAACpB,QAAQ,GAAG,UAAU;IAC7CwE,iBAAiB,CAACpD,KAAK,CAACC,MAAM,GAAG,OAAO;IACxCmD,iBAAiB,CAACpD,KAAK,CAACqD,KAAK,GAAG,MAAM;IACtCD,iBAAiB,CAACpD,KAAK,CAACgD,OAAO,GAAG,MAAM;IACxCI,iBAAiB,CAACF,SAAS,CAACpE,GAAG,CAAC,iBAAiB,CAAC;IAClDsE,iBAAiB,CAAC5B,gBAAgB,CAAC,OAAO,EAAE,MAAM2B,YAAY,CAACtC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,CAAC;IAC5E1C,QAAQ,CAAC2B,IAAI,CAACG,WAAW,CAACkD,iBAAiB,CAAC;;IAE5C;IACA,MAAME,YAAY,GAAGlF,QAAQ,CAAC+C,aAAa,CAAC,QAAQ,CAAC;IACrDmC,YAAY,CAAClC,SAAS,GAAG,QAAQ;IACjCkC,YAAY,CAACjC,SAAS,GAAG,eAAe;IACxCiC,YAAY,CAACtD,KAAK,CAACpB,QAAQ,GAAG,UAAU;IACxC0E,YAAY,CAACtD,KAAK,CAACC,MAAM,GAAG,OAAO;IACnCqD,YAAY,CAACtD,KAAK,CAACsB,IAAI,GAAG,KAAK;IAC/BgC,YAAY,CAACtD,KAAK,CAACuB,SAAS,GAAG,kBAAkB;IACjD+B,YAAY,CAACtD,KAAK,CAACgD,OAAO,GAAG,MAAM;IACnCM,YAAY,CAAC9B,gBAAgB,CAAC,OAAO,EAAE+B,oBAAoB,CAAC;IAC5DnF,QAAQ,CAAC2B,IAAI,CAACG,WAAW,CAACoD,YAAY,CAAC;EACzC;EAEA,SAASH,YAAYA,CAACK,KAAK,EAAE;IAC3B,IAAI1F,cAAc,EAAE;MAClBA,cAAc,CAAC2F,QAAQ,CAACC,CAAC,IAAIF,KAAK;IACpC;EACF;EAEA,SAASD,oBAAoBA,CAAA,EAAG;IAC9B,IAAIzF,cAAc,EAAE;MAClB;MACAR,KAAK,CAACqG,MAAM,CAAC7F,cAAc,CAAC;;MAE5B;MACAC,aAAa,GAAGA,aAAa,CAAC6F,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAK/F,cAAc,CAAC;;MAErE;MACAM,QAAQ,CAAC2E,aAAa,CAAC,kBAAkB,CAAC,CAAC/C,KAAK,CAACgD,OAAO,GAAG,MAAM;MACjE5E,QAAQ,CAAC2E,aAAa,CAAC,gBAAgB,CAAC,CAAC/C,KAAK,CAACgD,OAAO,GAAG,MAAM;MAE/DlF,cAAc,GAAG,IAAI;IACvB;EACF;EAEA,SAASI,OAAOA,CAAA,EAAG;IACjBV,QAAQ,CAACsG,gBAAgB,CAACC,MAAM,CAAC;EACnC;EAEA,SAASA,MAAMA,CAACC,SAAS,EAAEC,KAAK,EAAE;IAChC,IAAIA,KAAK,EAAE;MACT,MAAMC,cAAc,GAAG1G,QAAQ,CAAC+B,EAAE,CAAC4E,iBAAiB,CAAC,CAAC;MACtD,MAAMC,OAAO,GAAG5G,QAAQ,CAAC+B,EAAE,CAAC8E,UAAU,CAAC,CAAC;MAExC,IAAIhH,sBAAsB,KAAK,KAAK,EAAE;QACpC+G,OAAO,CAACE,qBAAqB,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAC,UAAUL,cAAc,EAAE;UACrEE,OAAO,CACJI,oBAAoB,CAAC;YAAEC,KAAK,EAAEP;UAAe,CAAC,CAAC,CAC/CK,IAAI,CAAC,UAAUG,MAAM,EAAE;YACtBtH,aAAa,GAAGsH,MAAM;UACxB,CAAC,CAAC;QACN,CAAC,CAAC;QAEFN,OAAO,CAAC5C,gBAAgB,CAAC,KAAK,EAAE,YAAY;UAC1CnE,sBAAsB,GAAG,KAAK;UAC9BD,aAAa,GAAG,IAAI;QACtB,CAAC,CAAC;QAEFC,sBAAsB,GAAG,IAAI;MAC/B;MAEA,IAAID,aAAa,EAAE;QACjB,MAAMuH,cAAc,GAAGV,KAAK,CAACW,iBAAiB,CAACxH,aAAa,CAAC;QAE7D,IAAIuH,cAAc,CAACvE,MAAM,EAAE;UACzB,MAAMyE,GAAG,GAAGF,cAAc,CAAC,CAAC,CAAC;UAC7B,MAAM9C,MAAM,GAAGgD,GAAG,CAACC,OAAO,CAACZ,cAAc,CAAC,CAAC3C,SAAS,CAACM,MAAM;UAC3D,MAAMkD,MAAM,GAAG,IAAIlI,KAAK,CAACmI,OAAO,CAACnD,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;UACjE,MAAMoD,WAAW,GAAGF,MAAM,CAACG,OAAO,CAAC,IAAIrI,KAAK,CAACmI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;UAC9D,MAAMG,iBAAiB,GAAGtI,KAAK,CAACuI,SAAS,CAACC,QAAQ,CAAC,EAAE,CAAC;UAEtD,IAAIJ,WAAW,GAAGE,iBAAiB,EAAE;YACnChI,OAAO,CAAC8D,OAAO,GAAG,IAAI;YACtB9D,OAAO,CAAC0E,MAAM,CAACyD,SAAS,CAACzD,MAAM,CAAC;UAClC,CAAC,MAAM;YACL1E,OAAO,CAAC8D,OAAO,GAAG,KAAK;UACzB;QACF,CAAC,MAAM;UACL9D,OAAO,CAAC8D,OAAO,GAAG,KAAK;QACzB;MACF;IACF;IAEAzD,QAAQ,CAACuG,MAAM,CAACzG,KAAK,EAAEC,MAAM,CAAC;EAChC;EAEA,oBAAON,OAAA;IAAKoE,SAAS,EAAC;EAAK;IAAAkE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACpC;AAACC,EAAA,GAzQQzI,GAAG;AA2QZ,eAAeA,GAAG;AAAC,IAAAyI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}