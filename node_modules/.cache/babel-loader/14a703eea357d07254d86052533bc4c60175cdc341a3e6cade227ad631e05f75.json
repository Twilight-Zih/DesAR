{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZIHAB\\\\OneDrive\\\\Desktop\\\\Final Year Mesh&Zih\\\\DesAR\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { XREstimatedLight } from \"three/examples/jsm/webxr/XREstimatedLight\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedObject, setSelectedObject] = useState(null);\n  const [showWarning, setShowWarning] = useState(false);\n  const [doubleTapTimeout, setDoubleTapTimeout] = useState(null);\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n  let scene, camera, renderer;\n  let models = [\"./dylan_armchair_yolk_yellow.glb\", \"./ivan_armchair_mineral_blue.glb\", \"./marble_coffee_table.glb\", \"./flippa_functional_coffee_table_w._storagewalnut.glb\", \"./frame_armchairpetrol_velvet_with_gold_frame.glb\", \"./elnaz_nesting_side_tables_brass__green_marble.glb\"];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01];\n  let items = [];\n  let itemSelectedIndex = 0;\n  let placedObjects = [];\n  let controller;\n  let raycaster = new THREE.Raycaster();\n  let rotateInterval = null;\n  useEffect(() => {\n    init();\n    setupFurnitureSelection();\n    animate();\n  }, [init, setupFurnitureSelection, animate]);\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(70, myCanvas.innerWidth / myCanvas.innerHeight, 0.01, 20);\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n    const xrLight = new XREstimatedLight(renderer);\n    xrLight.addEventListener(\"estimationstart\", () => {\n      scene.add(xrLight);\n      scene.remove(light);\n      if (xrLight.environment) {\n        scene.environment = xrLight.environment;\n      }\n    });\n    xrLight.addEventListener(\"estimationend\", () => {\n      scene.add(light);\n      scene.remove(xrLight);\n    });\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: {\n        root: document.body\n      }\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        items[i] = model;\n      });\n    }\n    controller = renderer.xr.getController(0);\n    controller.addEventListener(\"select\", onSelect);\n    scene.add(controller);\n    reticle = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial());\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n    window.addEventListener(\"click\", onSceneClick, false);\n  }\n  function setupFurnitureSelection() {\n    const furnitureButtons = document.querySelectorAll(\".button-image\");\n    furnitureButtons.forEach((button, index) => {\n      button.addEventListener(\"click\", () => {\n        itemSelectedIndex = index;\n        setSelectedObject(index); // Set the selected object index\n        console.log(`Furniture item ${index} selected`);\n      });\n    });\n  }\n  function onSelect() {\n    if (reticle.visible) {\n      let newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n      let newPosition = new THREE.Vector3();\n      reticle.matrix.decompose(newPosition, newModel.quaternion, newModel.scale);\n      const overlap = placedObjects.some(object => {\n        const distance = object.position.distanceTo(newPosition);\n        return distance < 0.5;\n      });\n      if (overlap) {\n        console.log(\"Cannot place object: overlap detected.\");\n        setShowWarning(true);\n        return;\n      }\n      newModel.position.copy(newPosition);\n      let scaleFactor = modelScaleFactor[itemSelectedIndex];\n      newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n      scene.add(newModel);\n      placedObjects.push(newModel);\n    }\n  }\n  function onSceneClick(event) {\n    const mouse = new THREE.Vector2();\n    mouse.x = event.clientX / window.innerWidth * 2 - 1;\n    mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    raycaster.setFromCamera(mouse, camera);\n    const intersects = raycaster.intersectObjects(placedObjects);\n    if (intersects.length > 0) {\n      const tappedObject = intersects[0].object;\n      handleDoubleTap(tappedObject);\n    }\n  }\n  function handleDoubleTap(tappedObject) {\n    if (doubleTapTimeout) {\n      clearTimeout(doubleTapTimeout);\n      setDoubleTapTimeout(null); // Reset timeout\n      scene.remove(tappedObject);\n      placedObjects = placedObjects.filter(obj => obj !== tappedObject);\n      console.log(\"Object removed\");\n    } else {\n      const timeout = setTimeout(() => {\n        setDoubleTapTimeout(null); // Reset timeout after 300ms\n      }, 300);\n      setDoubleTapTimeout(timeout);\n    }\n  }\n  function rotateObject(object, angle) {\n    object.rotation.y += angle;\n  }\n  function onRotateLeftPress() {\n    rotateInterval = setInterval(() => {\n      if (selectedObject !== null) {\n        rotateObject(placedObjects[selectedObject], -0.05);\n      }\n    }, 16); // Rotate smoothly\n  }\n\n  function onRotateRightPress() {\n    rotateInterval = setInterval(() => {\n      if (selectedObject !== null) {\n        rotateObject(placedObjects[selectedObject], 0.05);\n      }\n    }, 16); // Rotate smoothly\n  }\n\n  function onRotateRelease() {\n    clearInterval(rotateInterval);\n  }\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session.requestHitTestSource({\n            space: referenceSpace\n          }).then(function (source) {\n            hitTestSource = source;\n          });\n        });\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n        hitTestSourceRequested = true;\n      }\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          const hitMatrix = hit.getPose(referenceSpace).transform.matrix;\n          reticle.visible = true;\n          reticle.matrix.fromArray(hitMatrix);\n          const position = new THREE.Vector3();\n          const quaternion = new THREE.Quaternion();\n          const scale = new THREE.Vector3();\n          reticle.matrix.decompose(position, quaternion, scale);\n          position.y = 0;\n          reticle.position.copy(position);\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n    renderer.render(scene, camera);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [showWarning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"warning\",\n      children: \"Overlap detected. Cannot place object here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 23\n    }, this), selectedObject !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rotate-button rotate-left\",\n        onMouseDown: onRotateLeftPress,\n        onMouseUp: onRotateRelease,\n        onTouchStart: onRotateLeftPress,\n        onTouchEnd: onRotateRelease,\n        children: \"Rotate Left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rotate-button rotate-right\",\n        onMouseDown: onRotateRightPress,\n        onMouseUp: onRotateRelease,\n        onTouchStart: onRotateRightPress,\n        onTouchEnd: onRotateRelease,\n        children: \"Rotate Right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"place-button\",\n      onClick: onSelect // Call onSelect function to place the object\n      ,\n      children: \"Place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"brzs8O96Eo+AHhw8aJev9zOqWws=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["THREE","ARButton","GLTFLoader","XREstimatedLight","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedObject","setSelectedObject","showWarning","setShowWarning","doubleTapTimeout","setDoubleTapTimeout","reticle","hitTestSource","hitTestSourceRequested","scene","camera","renderer","models","modelScaleFactor","items","itemSelectedIndex","placedObjects","controller","raycaster","Raycaster","rotateInterval","init","setupFurnitureSelection","animate","myCanvas","document","getElementById","Scene","PerspectiveCamera","innerWidth","innerHeight","light","HemisphereLight","position","set","add","WebGLRenderer","canvas","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","xr","enabled","xrLight","addEventListener","remove","environment","arButton","createButton","requiredFeatures","optionalFeatures","domOverlay","root","body","style","bottom","appendChild","i","length","loader","load","glb","model","getController","onSelect","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","matrixAutoUpdate","visible","onSceneClick","furnitureButtons","querySelectorAll","forEach","button","index","console","log","newModel","clone","newPosition","Vector3","matrix","decompose","quaternion","scale","overlap","some","object","distance","distanceTo","copy","scaleFactor","push","event","mouse","Vector2","x","clientX","y","clientY","setFromCamera","intersects","intersectObjects","tappedObject","handleDoubleTap","clearTimeout","filter","obj","timeout","setTimeout","rotateObject","angle","rotation","onRotateLeftPress","setInterval","onRotateRightPress","onRotateRelease","clearInterval","setAnimationLoop","render","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","hitTestResults","getHitTestResults","hit","hitMatrix","getPose","transform","fromArray","Quaternion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ZIHAB/OneDrive/Desktop/Final Year Mesh&Zih/DesAR/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { XREstimatedLight } from \"three/examples/jsm/webxr/XREstimatedLight\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [selectedObject, setSelectedObject] = useState(null);\n  const [showWarning, setShowWarning] = useState(false);\n  const [doubleTapTimeout, setDoubleTapTimeout] = useState(null);\n\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n  let scene, camera, renderer;\n  let models = [\n    \"./dylan_armchair_yolk_yellow.glb\",\n    \"./ivan_armchair_mineral_blue.glb\",\n    \"./marble_coffee_table.glb\",\n    \"./flippa_functional_coffee_table_w._storagewalnut.glb\",\n    \"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\n    \"./elnaz_nesting_side_tables_brass__green_marble.glb\",\n  ];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01];\n  let items = [];\n  let itemSelectedIndex = 0;\n  let placedObjects = [];\n  let controller;\n  let raycaster = new THREE.Raycaster();\n  let rotateInterval = null;\n\n  useEffect(() => {\n    init();\n    setupFurnitureSelection();\n    animate();\n  }, [init, setupFurnitureSelection, animate]);\n\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(\n      70,\n      myCanvas.innerWidth / myCanvas.innerHeight,\n      0.01,\n      20\n    );\n\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n\n    const xrLight = new XREstimatedLight(renderer);\n    xrLight.addEventListener(\"estimationstart\", () => {\n      scene.add(xrLight);\n      scene.remove(light);\n      if (xrLight.environment) {\n        scene.environment = xrLight.environment;\n      }\n    });\n\n    xrLight.addEventListener(\"estimationend\", () => {\n      scene.add(light);\n      scene.remove(xrLight);\n    });\n\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: { root: document.body },\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        items[i] = model;\n      });\n    }\n\n    controller = renderer.xr.getController(0);\n    controller.addEventListener(\"select\", onSelect);\n    scene.add(controller);\n\n    reticle = new THREE.Mesh(\n      new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2),\n      new THREE.MeshBasicMaterial()\n    );\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    window.addEventListener(\"click\", onSceneClick, false);\n  }\n\n  function setupFurnitureSelection() {\n    const furnitureButtons = document.querySelectorAll(\".button-image\");\n    furnitureButtons.forEach((button, index) => {\n      button.addEventListener(\"click\", () => {\n        itemSelectedIndex = index;\n        setSelectedObject(index); // Set the selected object index\n        console.log(`Furniture item ${index} selected`);\n      });\n    });\n  }\n\n  function onSelect() {\n    if (reticle.visible) {\n      let newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n\n      let newPosition = new THREE.Vector3();\n      reticle.matrix.decompose(newPosition, newModel.quaternion, newModel.scale);\n\n      const overlap = placedObjects.some((object) => {\n        const distance = object.position.distanceTo(newPosition);\n        return distance < 0.5;\n      });\n\n      if (overlap) {\n        console.log(\"Cannot place object: overlap detected.\");\n        setShowWarning(true);\n        return;\n      }\n\n      newModel.position.copy(newPosition);\n      let scaleFactor = modelScaleFactor[itemSelectedIndex];\n      newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n\n      scene.add(newModel);\n      placedObjects.push(newModel);\n    }\n  }\n\n  function onSceneClick(event) {\n    const mouse = new THREE.Vector2();\n    mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n    mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n    raycaster.setFromCamera(mouse, camera);\n    const intersects = raycaster.intersectObjects(placedObjects);\n\n    if (intersects.length > 0) {\n      const tappedObject = intersects[0].object;\n      handleDoubleTap(tappedObject);\n    }\n  }\n\n  function handleDoubleTap(tappedObject) {\n    if (doubleTapTimeout) {\n      clearTimeout(doubleTapTimeout);\n      setDoubleTapTimeout(null); // Reset timeout\n      scene.remove(tappedObject);\n      placedObjects = placedObjects.filter((obj) => obj !== tappedObject);\n      console.log(\"Object removed\");\n    } else {\n      const timeout = setTimeout(() => {\n        setDoubleTapTimeout(null); // Reset timeout after 300ms\n      }, 300);\n      setDoubleTapTimeout(timeout);\n    }\n  }\n\n  function rotateObject(object, angle) {\n    object.rotation.y += angle;\n  }\n\n  function onRotateLeftPress() {\n    rotateInterval = setInterval(() => {\n      if (selectedObject !== null) {\n        rotateObject(placedObjects[selectedObject], -0.05);\n      }\n    }, 16); // Rotate smoothly\n  }\n\n  function onRotateRightPress() {\n    rotateInterval = setInterval(() => {\n      if (selectedObject !== null) {\n        rotateObject(placedObjects[selectedObject], 0.05);\n      }\n    }, 16); // Rotate smoothly\n  }\n\n  function onRotateRelease() {\n    clearInterval(rotateInterval);\n  }\n\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session\n            .requestHitTestSource({ space: referenceSpace })\n            .then(function (source) {\n              hitTestSource = source;\n            });\n        });\n\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n\n        hitTestSourceRequested = true;\n      }\n\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          const hitMatrix = hit.getPose(referenceSpace).transform.matrix;\n\n          reticle.visible = true;\n          reticle.matrix.fromArray(hitMatrix);\n\n          const position = new THREE.Vector3();\n          const quaternion = new THREE.Quaternion();\n          const scale = new THREE.Vector3();\n\n          reticle.matrix.decompose(position, quaternion, scale);\n          position.y = 0;\n\n          reticle.position.copy(position);\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n\n    renderer.render(scene, camera);\n  }\n\n  return (\n    <div className=\"App\">\n      {showWarning && <div className=\"warning\">Overlap detected. Cannot place object here.</div>}\n      {selectedObject !== null && (\n        <>\n          <button\n            className=\"rotate-button rotate-left\"\n            onMouseDown={onRotateLeftPress}\n            onMouseUp={onRotateRelease}\n            onTouchStart={onRotateLeftPress}\n            onTouchEnd={onRotateRelease}\n          >\n            Rotate Left\n          </button>\n          <button\n            className=\"rotate-button rotate-right\"\n            onMouseDown={onRotateRightPress}\n            onMouseUp={onRotateRelease}\n            onTouchStart={onRotateRightPress}\n            onTouchEnd={onRotateRelease}\n          >\n            Rotate Right\n          </button>\n        </>\n      )}\n      <button\n        className=\"place-button\"\n        onClick={onSelect} // Call onSelect function to place the object\n      >\n        Place\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}