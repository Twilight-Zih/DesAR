{"ast":null,"code":"import\"./App.css\";import*as THREE from\"three\";import{ARButton}from\"three/examples/jsm/webxr/ARButton\";import{GLTFLoader}from\"three/examples/jsm/loaders/GLTFLoader\";import{XREstimatedLight}from\"three/examples/jsm/webxr/XREstimatedLight\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){var reticle;var hitTestSource=null;var hitTestSourceRequested=false;var scene,camera,renderer;var models=[\"./dylan_armchair_yolk_yellow.glb\",\"./ivan_armchair_mineral_blue.glb\",\"./marble_coffee_table.glb\",\"./flippa_functional_coffee_table_w._storagewalnut.glb\",\"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\"./elnaz_nesting_side_tables_brass__green_marble.glb\"];var modelScaleFactor=[0.01,0.01,0.005,0.01,0.01,0.01];var items=[];var itemSelectedIndex=0;var controller;init();setupFurnitureSelection();animate();function init(){var myCanvas=document.getElementById(\"canvas\");scene=new THREE.Scene();camera=new THREE.PerspectiveCamera(70,myCanvas.innerWidth/myCanvas.innerHeight,0.01,20);var light=new THREE.HemisphereLight(0xffffff,0xbbbbff,1);light.position.set(0.5,1,0.25);scene.add(light);renderer=new THREE.WebGLRenderer({canvas:myCanvas,antialias:true,alpha:true});renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(myCanvas.innerWidth,myCanvas.innerHeight);renderer.xr.enabled=true;// Don't add the XREstimatedLight to the scene initially\n// It doesn't have any estimated lighting values until an AR session starts\nvar xrLight=new XREstimatedLight(renderer);xrLight.addEventListener(\"estimationstart\",function(){// Swap the default light out for the estimated one so we start getting some estimated values.\nscene.add(xrLight);scene.remove(light);// The estimated lighting also provides an env cubemap which we apply here\nif(xrLight.environment){scene.environment=xrLight.environment;}});xrLight.addEventListener(\"estimationend\",function(){// Swap the lights back when we stop receiving estimated values\nscene.add(light);scene.remove(xrLight);// Revert back to the default environment\n// scene.environment =\n});var arButton=ARButton.createButton(renderer,{requiredFeatures:[\"hit-test\"],optionalFeatures:[\"dom-overlay\",\"light-estimation\"],domOverlay:{root:document.body}});arButton.style.bottom=\"20%\";document.body.appendChild(arButton);var _loop=function _loop(i){var loader=new GLTFLoader();loader.load(models[i],function(glb){var model=glb.scene;items[i]=model;});};for(var i=0;i<models.length;i++){_loop(i);}controller=renderer.xr.getController(0);controller.addEventListener(\"select\",onSelect);scene.add(controller);reticle=new THREE.Mesh(new THREE.RingGeometry(0.15,0.2,32).rotateX(-Math.PI/2),new THREE.MeshBasicMaterial());reticle.matrixAutoUpdate=false;reticle.visible=false;scene.add(reticle);}function onSelect(){if(reticle.visible){var newModel=items[itemSelectedIndex].clone();newModel.visible=true;// this one will set the position but not the rotation\n// newModel.position.setFromMatrixPosition(reticle.matrix);\n// this will set the position and the rotation to face you\nreticle.matrix.decompose(newModel.position,newModel.quaternion,newModel.scale);var scaleFactor=modelScaleFactor[itemSelectedIndex];newModel.scale.set(scaleFactor,scaleFactor,scaleFactor);scene.add(newModel);}}var onClicked=function onClicked(e,selectItem,index){itemSelectedIndex=index;// remove image selection from others to indicate unclicked\nfor(var i=0;i<models.length;i++){var el=document.querySelector(\"#item\"+i);el.classList.remove(\"clicked\");}// set image to selected\ne.target.classList.add(\"clicked\");};function setupFurnitureSelection(){var _loop2=function _loop2(i){var el=document.querySelector(\"#item\"+i);el.addEventListener(\"beforexrselect\",function(e){e.preventDefault();e.stopPropagation();});el.addEventListener(\"click\",function(e){e.preventDefault();e.stopPropagation();onClicked(e,items[i],i);});};for(var i=0;i<models.length;i++){_loop2(i);}}function animate(){renderer.setAnimationLoop(render);}function render(timestamp,frame){if(frame){var referenceSpace=renderer.xr.getReferenceSpace();var session=renderer.xr.getSession();if(hitTestSourceRequested===false){session.requestReferenceSpace(\"viewer\").then(function(referenceSpace){session.requestHitTestSource({space:referenceSpace}).then(function(source){hitTestSource=source;});});session.addEventListener(\"end\",function(){hitTestSourceRequested=false;hitTestSource=null;});hitTestSourceRequested=true;}if(hitTestSource){var hitTestResults=frame.getHitTestResults(hitTestSource);if(hitTestResults.length){var hit=hitTestResults[0];reticle.visible=true;reticle.matrix.fromArray(hit.getPose(referenceSpace).transform.matrix);}else{reticle.visible=false;}}}renderer.render(scene,camera);}return/*#__PURE__*/_jsx(\"div\",{className:\"App\"});}export default App;","map":{"version":3,"names":["THREE","ARButton","GLTFLoader","XREstimatedLight","jsx","_jsx","App","reticle","hitTestSource","hitTestSourceRequested","scene","camera","renderer","models","modelScaleFactor","items","itemSelectedIndex","controller","init","setupFurnitureSelection","animate","myCanvas","document","getElementById","Scene","PerspectiveCamera","innerWidth","innerHeight","light","HemisphereLight","position","set","add","WebGLRenderer","canvas","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","xr","enabled","xrLight","addEventListener","remove","environment","arButton","createButton","requiredFeatures","optionalFeatures","domOverlay","root","body","style","bottom","appendChild","_loop","i","loader","load","glb","model","length","getController","onSelect","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","matrixAutoUpdate","visible","newModel","clone","matrix","decompose","quaternion","scale","scaleFactor","onClicked","e","selectItem","index","el","querySelector","classList","target","_loop2","preventDefault","stopPropagation","setAnimationLoop","render","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","hitTestResults","getHitTestResults","hit","fromArray","getPose","transform","className"],"sources":["C:/Users/ZIHAB/OneDrive/Desktop/Final Year Mesh&Zih/3D-WebXR-Furniture-main/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { XREstimatedLight } from \"three/examples/jsm/webxr/XREstimatedLight\";\n\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n\n  let scene, camera, renderer;\n\n  let models = [\n    \"./dylan_armchair_yolk_yellow.glb\",\n    \"./ivan_armchair_mineral_blue.glb\",\n    \"./marble_coffee_table.glb\",\n    \"./flippa_functional_coffee_table_w._storagewalnut.glb\",\n    \"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\n    \"./elnaz_nesting_side_tables_brass__green_marble.glb\",\n  ];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01];\n  let items = [];\n  let itemSelectedIndex = 0;\n\n  let controller;\n\n  init();\n  setupFurnitureSelection();\n  animate();\n\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(\n      70,\n      myCanvas.innerWidth / myCanvas.innerHeight,\n      0.01,\n      20\n    );\n\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.xr.enabled = true;\n\n    // Don't add the XREstimatedLight to the scene initially\n    // It doesn't have any estimated lighting values until an AR session starts\n    const xrLight = new XREstimatedLight(renderer);\n    xrLight.addEventListener(\"estimationstart\", () => {\n      // Swap the default light out for the estimated one so we start getting some estimated values.\n      scene.add(xrLight);\n      scene.remove(light);\n      // The estimated lighting also provides an env cubemap which we apply here\n      if (xrLight.environment) {\n        scene.environment = xrLight.environment;\n      }\n    });\n\n    xrLight.addEventListener(\"estimationend\", () => {\n      // Swap the lights back when we stop receiving estimated values\n      scene.add(light);\n      scene.remove(xrLight);\n\n      // Revert back to the default environment\n      // scene.environment =\n    });\n\n    let arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"dom-overlay\", \"light-estimation\"],\n      domOverlay: { root: document.body },\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        items[i] = model;\n      });\n    }\n\n    controller = renderer.xr.getController(0);\n    controller.addEventListener(\"select\", onSelect);\n    scene.add(controller);\n\n    reticle = new THREE.Mesh(\n      new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2),\n      new THREE.MeshBasicMaterial()\n    );\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n  }\n\n  function onSelect() {\n    if (reticle.visible) {\n      let newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n      // this one will set the position but not the rotation\n      // newModel.position.setFromMatrixPosition(reticle.matrix);\n\n      // this will set the position and the rotation to face you\n      reticle.matrix.decompose(\n        newModel.position,\n        newModel.quaternion,\n        newModel.scale\n      );\n      let scaleFactor = modelScaleFactor[itemSelectedIndex];\n      newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n\n      scene.add(newModel);\n    }\n  }\n\n  const onClicked = (e, selectItem, index) => {\n    itemSelectedIndex = index;\n\n    // remove image selection from others to indicate unclicked\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.classList.remove(\"clicked\");\n    }\n    // set image to selected\n    e.target.classList.add(\"clicked\");\n  };\n\n  function setupFurnitureSelection() {\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.addEventListener(\"beforexrselect\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClicked(e, items[i], i);\n      });\n    }\n  }\n\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n\n      if (hitTestSourceRequested === false) {\n        session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n          session\n            .requestHitTestSource({ space: referenceSpace })\n            .then(function (source) {\n              hitTestSource = source;\n            });\n        });\n\n        session.addEventListener(\"end\", function () {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n\n        hitTestSourceRequested = true;\n      }\n\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n\n          reticle.visible = true;\n          reticle.matrix.fromArray(\n            hit.getPose(referenceSpace).transform.matrix\n          );\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n\n    renderer.render(scene, camera);\n  }\n\n  return <div className=\"App\"></div>;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}